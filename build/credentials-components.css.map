{
  "version": 3,
  "file": "credentials-components.css",
  "sources": [
    "../../CredentialsForm.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { createUrl } from '../../javascripts/utils/helpers';\n  import { postFormData } from '../../javascripts/utils/helpers';\n  export let apiProtocol;\n  export let apiHost;\n\n  const params = new URLSearchParams(window.location.search);\n  let showSignIn = !params.has('signup');\n\n  let error = {\n    signin: null,\n    signup: null,\n  };\n\n  async function handleSubmit(path, formId) {\n    const url = createUrl(apiProtocol, apiHost, path);\n    const formData = new FormData(document.getElementById(formId));\n    const res = await postFormData(url, formData);\n\n    if (!res.ok) {\n      const t = await res.text();\n      error[path] = JSON.parse(t);\n    } else {\n      /* Redirect to dashboard */\n      const url = createUrl(window.location.protocol,\n      window.location.host, 'dashboard.html');\n      window.location.replace(url);\n    }\n  }\n\n  function handleSignIn() {\n    handleSubmit('signin', 'signin-form');\n  }\n\n  function handleSignUp() {\n    handleSubmit('signup', 'signup-form');\n  }\n\n  function toggleShowSignIn() {\n    showSignIn = !showSignIn;\n  }\n\n  function flushError(key) {\n    error[key] = null;\n  }\n</script>\n\n<div id=\"signin\" class:is-hidden=\"{!showSignIn}\">\n  <div class='item-box'>\n    <h1 class=\"title is-4\">\n      Sign in :\n    </h1>\n\n    <form id=\"signin-form\" on:submit|preventDefault={handleSignIn}>\n      <div class=\"notification is-warning\" class:is-hidden={!error['signin']}>\n        <button class=\"delete\" on:click|preventDefault={() => flushError('signin')} ></button>\n        <h1 class='title is-5'>\n          Unable to Sign in\n        </h1>\n        <ul>\n          {#if error['signin']}\n            {#each Object.entries(error['signin']) as [ key, ar ]}\n              <li>{key} : {ar}</li>\n            {/each}\n          {/if}\n        </ul>\n      </div>\n\n      <div class=\"field\">\n        <label class=\"label\">\n          Email :\n          <span class=\"mandatory\">*</span>\n        </label>\n        <div class=\"control\">\n          <input name=\"user[email]\" class=\"input reasonable-width\" type=\"text\">\n        </div>\n      </div>\n\n      <div class=\"field\">\n        <label class=\"label\">\n          Password :\n          <span class=\"mandatory\">*</span>\n        </label>\n        <div class=\"control\">\n          <input name=\"user[password]\" class=\"input reasonable-width\" type=\"password\">\n        </div>\n      </div>\n\n      <div class=\"field is-grouped\">\n        <div class=\"control\">\n          <button class=\"button is-link\">Sign In</button>\n        </div>\n        <div class=\"control\">\n          <a href='javascript:void(0)' class=\"button is-link is-outlined\" on:click={toggleShowSignIn}>Sign Up</a>\n        </div>\n        <div class=\"control\">\n          <a href=\"/index.html\" class=\"button is-link is-light\">Cancel</a>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n\n\n\n\n\n\n<div id=\"signup\" class:is-hidden=\"{showSignIn}\">\n  <div class='item-box'>\n    <h1 class=\"title is-4\">\n      Sign up :\n    </h1>\n\n    <form id=\"signup-form\" on:submit|preventDefault={handleSignUp}>\n      <div class=\"notification is-danger\" class:is-hidden={!error['signup']}>\n        <button class=\"delete\" on:click|preventDefault={() => flushError('signup')}></button>\n        <h1 class='title is-5'>\n          Unable to Sign up\n        </h1>\n        <ul>\n          {#if error['signup']}\n            {#each Object.entries(error['signup']) as [ key, ar ]}\n              <li>{key} : {ar.join(', ')}</li>\n            {/each}\n          {/if}\n        </ul>\n      </div>\n\n      <div class=\"field\">\n        <label class=\"label\">\n          Name :\n          <span class=\"mandatory\">*</span>\n        </label>\n        <div class=\"control\">\n          <input name=\"user[name]\" class=\"input reasonable-width\" type=\"text\">\n        </div>\n      </div>\n\n      <div class=\"field\">\n        <label class=\"label\">\n          Email :\n          <span class=\"mandatory\">*</span>\n        </label>\n        <div class=\"control\">\n          <input name=\"user[email]\" class=\"input reasonable-width\" type=\"text\">\n        </div>\n      </div>\n\n      <div class=\"field\">\n        <label class=\"label\">\n          Password :\n          <span class=\"mandatory\">*</span>\n        </label>\n        <div class=\"control\">\n          <input name=\"user[password]\" class=\"input reasonable-width\" type=\"password\">\n        </div>\n      </div>\n\n      <div class=\"field\">\n        <label class=\"label\">\n          Password Confirmation:\n          <span class=\"mandatory\">*</span>\n        </label>\n        <div class=\"control\">\n          <input name=\"user[password_confirmation]\" class=\"input reasonable-width\" type=\"password\">\n        </div>\n      </div>\n\n      <div class=\"field is-grouped\">\n        <div class=\"control\">\n          <button class=\"button is-link\">Sign Up</button>\n        </div>\n        <div class=\"control\">\n          <a href='javascript:void(0)' class=\"button is-link is-outlined\" on:click={toggleShowSignIn}>Sign In</a>\n        </div>\n        <div class=\"control\">\n          <a href=\"/index.html\" class=\"button is-link is-light\">Cancel</a>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n\n<style lang=\"scss\">.item-box {\n  padding: 1.5em;\n  margin: auto; }\n\n/*# sourceMappingURL=CredentialsForm.svelte.css.map */</style>"
  ],
  "names": [],
  "mappings": "AAwLmB,SAAS,eAAC,CAAC,AAC5B,OAAO,CAAE,KAAK,CACd,MAAM,CAAE,IAAI,AAAE,CAAC"
}