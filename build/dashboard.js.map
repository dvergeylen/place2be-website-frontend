{"version":3,"file":"dashboard.js","sources":["../../src/javascripts/utils/helpers.js","../../node_modules/svelte/internal/index.mjs","../../src/components/Dashboard/GameList.svelte","../../src/components/Dashboard/NewGame.svelte","../../node_modules/svelte/transition/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/javascripts/stores/gameStore.js","../../src/javascripts/stores/savingStore.js","../../src/components/Dashboard/GameTabs.svelte","../../src/components/Dashboard/Tabs/Overview.svelte","../../src/components/Dashboard/Tabs/SharedComps/Assets/AssetsIndex.svelte","../../src/components/Dashboard/Tabs/SharedComps/Assets/AssetsForm.svelte","../../src/components/Dashboard/Tabs/Resource/Resource.svelte","../../src/components/Dashboard/Tabs/SharedComps/Relation/ConditionsShows/ActionTrigger.svelte","../../src/components/Dashboard/Tabs/SharedComps/Relation/ConditionsForms/ActionTrigger.svelte","../../src/components/Dashboard/Tabs/SharedComps/Relation/ConditionsShows/UnlockedAchievement.svelte","../../src/components/Dashboard/Tabs/SharedComps/Relation/ConditionsForms/UnlockedAchievement.svelte","../../src/components/Dashboard/Tabs/SharedComps/Relation/ConditionsShows/TimeFrame.svelte","../../src/components/Dashboard/Tabs/SharedComps/Relation/ConditionsForms/TimeFrame.svelte","../../src/components/Dashboard/Tabs/SharedComps/Relation/Conditions.svelte","../../src/components/Dashboard/Tabs/SharedComps/Relation/Relation.svelte","../../src/components/Dashboard/Tabs/Action/Action.svelte","../../src/components/Dashboard/Tabs/Achievement/Achievement.svelte","../../src/components/Dashboard/Tabs/Collection.svelte","../../src/components/Dashboard/Tabs/Settings.svelte","../../src/components/Dashboard/GameDetails.svelte","../../src/components/Dashboard/Dashboard.svelte","../../src/components/Credentials/CredentialsButtons.svelte","../../src/javascripts/apps/dashboard.js"],"sourcesContent":["function createUrl(protocol, host, ...path) {\n  const sanitized = (Array.isArray(path)\n    ? path : [path]).map((s) => s.replace(/^\\/+|\\/+$/, ''));\n\n  return `${protocol}//${host}/${sanitized.join('/')}`;\n}\n\nfunction getCookie(cookies, key) {\n  const res = cookies.split(';').map((c) => c.split('=')).find(([k]) => k.trim() === key);\n  return res ? res[1] : undefined;\n}\n\n/* Usage:\n * const res = await fetchData(url);\n * → res.status: 200, 400, ...\n * → res.statusText: 'Ok', 'Bad Request', ...\n * → await res.json(): Json body\n */\nfunction fetchData(url) {\n  // https://developer.mozilla.org/en-US/docs/Web/API/Response\n  const csrf = getCookie(document.cookie, 'csrf_token');\n\n  return fetch(url, {\n    method: 'GET',\n    credentials: 'include', // Includes jwt (unreachable from JS because httponly)\n    headers: {\n      Accept: 'application/json',\n      ...(csrf && { 'x-csrf-token': csrf }), // Includes CSRF Token mitigation\n    },\n  });\n}\n\nfunction postFormData(url, data, method) {\n  const csrf = getCookie(document.cookie, 'csrf_token');\n\n  return fetch(url, {\n    method: method || 'POST',\n    credentials: 'include', // Includes jwt (unreachable because httponly)\n    headers: {\n      Accept: 'application/json',\n      ...(csrf && { 'x-csrf-token': csrf }), // Includes CSRF Token mitigation\n    },\n    body: data,\n  });\n}\n\nfunction postJsonData(token, url, data, method) {\n  const csrf = getCookie(document.cookie, 'csrf_token');\n\n  return fetch(url, {\n    method: method || 'POST',\n    credentials: 'include', // Includes jwt (unreachable because httponly)\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      ...(csrf && { 'x-csrf-token': csrf }), // Includes CSRF Token mitigation\n    },\n    body: JSON.stringify(data),\n  });\n}\n\n/* Navbar toggle */\nfunction setNavbarToggle() {\n  document.addEventListener('DOMContentLoaded', () => {\n    const navbarBurger = document.querySelector('.navbar-burger');\n    const navBarMenu = document.querySelector('.navbar-menu');\n\n    navbarBurger.addEventListener('click', () => {\n      if (navbarBurger.classList.contains('is-active')) {\n        navbarBurger.classList.remove('is-active');\n        navBarMenu.classList.remove('is-active');\n      } else {\n        navbarBurger.classList.add('is-active');\n        navBarMenu.classList.add('is-active');\n      }\n    });\n  });\n}\n\nfunction capitalizeFirstLetter(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport {\n  createUrl,\n  fetchData,\n  postFormData,\n  postJsonData,\n  getCookie,\n  setNavbarToggle,\n  capitalizeFirstLetter,\n};\n","function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.23.2' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\n  import { createEventDispatcher } from 'svelte';\n  export let gameList;\n  export let gameUrl;\n\n  const dispatch = createEventDispatcher();\n\n  function updateGameUrl(url) {\n    dispatch('message', {\n      gameUrl: url,\n    });\n  }\n</script>\n\n<div class=\"content\">\n  {#await gameList}\n    <div class=\"has-vcentered-content\">\n      <svg class=\"fa rotating\">\n        <use href=\"../images/fontawesome-sprite.svg#regular-sync-alt\" />\n      </svg>\n      <p class=\"left-spaced\">Loading Game List</p>\n    </div>\n  {:then games}\n    <article class=\"panel is-primary\">\n      <p class=\"panel-heading\">\n        Your Games :\n      </p>\n      <label class=\"panel-block fill-primary\"\n        on:click|preventDefault={async () => updateGameUrl('new')}>\n        <span class=\"panel-icon\">\n          <svg class=\"twemoji\">\n            <use href=\"../images/twemoji-sprite.svg#rocket\" />\n          </svg>\n        </span>\n        <span>\n          New Game\n        </span>\n      </label>\n      {#each games as game}\n        <label on:click|preventDefault={() => updateGameUrl(game.links.self)}\n          class=\"panel-block\">\n          <span class=\"panel-icon\" class:fill-primary={gameUrl === game.links.self}>\n            <svg class=\"twemoji\">\n              <use href=\"../images/twemoji-sprite.svg#trophy\" />\n            </svg>\n          </span>\n          {game.attributes.name}\n        </label>\n      {/each}\n    </article>\n  {:catch error}\n    <p class=\"error\">{error.message}</p>\n  {/await}\n</div>\n\n<style lang='scss'>\n  .twemoji {\n    width: 1.2em;\n    height: 1em;\n  }\n</style>","<script>\n  import { getContext, createEventDispatcher } from 'svelte';\n  import { createUrl, postFormData } from '../../javascripts/utils/helpers';\n\n  const dispatch = createEventDispatcher();\n  const apiProtocol = getContext('apiProtocol');\n  const apiHost = getContext('apiHost');\n  const userId = getContext('userId');\n\n  let error = null;\n\n  async function handleSubmit() {\n    const url = createUrl(apiProtocol, apiHost, 'users', userId, 'games');\n    const formData = new FormData(document.getElementById('new-game-form'));\n    const res = await postFormData(url, formData);\n\n    if (!res.ok) {\n      const responseBody = await res.text();\n      error = JSON.parse(responseBody);\n    } else {\n      const responseBody = await res.json();\n\n      /* Update Dashboard's new gameUrl to display */\n      dispatch('message', {\n        gameUrl: responseBody.data.links.self,\n        updateGameList: true,\n      });\n    }\n  }\n\n  function cancel() {\n    /* Update Dashboard's new gameUrl to display */\n    dispatch('message', {\n      gameUrl: undefined,\n    });\n  }\n\n  function flushError() {\n    error = null;\n  }\n</script>\n\n\n<div id=\"new-game\">\n  <h1 class=\"title is-4\">\n    Create new Game :\n  </h1>\n  <p>A Game contains all Actions\n    <svg class=\"twemoji\">\n      <use href=\"../images/twemoji-sprite.svg#high_voltage_sign\" />\n    </svg>,\n    Achievements\n    <svg class=\"twemoji\">\n      <use href=\"../images/twemoji-sprite.svg#trophy\" />\n    </svg>,\n    Resources\n    <svg class=\"twemoji\">\n      <use href=\"../images/twemoji-sprite.svg#sparkles\" />\n    </svg>\n    and Assets\n    <svg class=\"twemoji\">\n      <use href=\"../images/twemoji-sprite.svg#package\" />\n    </svg>\n    your players can interact with.</p>\n\n  <hr>\n\n  <form id=\"new-game-form\" on:submit|preventDefault={handleSubmit}>\n    <div class=\"notification is-danger\" class:is-hidden={!error} >\n      <button class=\"delete\" on:click|preventDefault={() => flushError()} ></button>\n      <h1 class='title is-5'>\n        Unable to Create new Game :\n      </h1>\n      <ul>\n        {#if error}\n          {#each Object.entries(error) as [ key, ar ]}\n            <li>{key} : {ar}</li>\n          {/each}\n        {/if}\n      </ul>\n    </div>\n\n    <div class=\"field\">\n      <label class=\"label\">\n        Game Name\n        <span class=\"mandatory\">*</span>\n      </label>\n      <div class=\"control\">\n        <input name=\"game[name]\" class=\"input reasonable-width\" type=\"text\">\n      </div>\n    </div>\n\n    <div class=\"field\">\n      <label class=\"label\">\n        Description\n        <span class=\"note\">(optional)</span>\n      </label>\n      <div class=\"control\">\n        <input name=\"game[description]\" class=\"input\" type=\"text\">\n      </div>\n      <p class=\"help\">Game and description won't be visible to your players.</p>\n    </div>\n\n    <div class=\"field is-grouped\">\n      <div class=\"control\">\n        <button class=\"button is-link\">Create</button>\n      </div>\n      <div class=\"control\">\n        <button class=\"button is-link is-light\" on:click|preventDefault={() => cancel()}>Cancel</button>\n      </div>\n    </div>\n  </form>\n</div>\n\n\n\n<style lang=\"scss\">\n  #new-game {\n    max-width: 1000px;\n  }\n  .mandatory {\n    color: red;\n  }\n</style>","import { cubicInOut, linear, cubicOut } from '../easing';\nimport { is_function, assign } from '../internal';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear }) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut }) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `overflow: hidden;` +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut }) {\n    const len = node.getTotalLength();\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from 'svelte/store';\n\nexport const game = writable(null);\n","import { writable, derived } from 'svelte/store';\n\nexport const savingStatus = writable('saved');\n\nexport const lastSaveDate = derived(\n  savingStatus,\n  () => new Date(),\n);\n","<script>\n  import { createEventDispatcher } from 'svelte';\n  import { game } from '../../javascripts/stores/gameStore';\n  export let selectedTab = 'overview';\n\n  const dispatch = createEventDispatcher();\n\n  function updateSelectedTab(selectedTab) {\n    dispatch('message', {\n      selectedTab,\n    });\n  }\n</script>\n\n\n<div id=\"game-tabs-container\" class=\"tabs\">\n  <ul>\n    <li class:is-active={selectedTab === 'overview'}>\n      <a href=\"javascript:void(0)\"\n        on:click|preventDefault={() => updateSelectedTab('overview')}>\n        <svg class=\"twemoji\">\n          <use href=\"../images/twemoji-sprite.svg#compass\" />\n        </svg>\n        <span class=\"left-spaced\">Overview</span>\n      </a>\n    </li>\n    <li class:is-active={selectedTab === 'actions'}>\n      <a href=\"javascript:void(0)\"\n        on:click|preventDefault={() => updateSelectedTab('actions')}>\n        <svg class=\"twemoji\">\n          <use href=\"../images/twemoji-sprite.svg#high_voltage_sign\" />\n        </svg>\n        <span class=\"left-spaced\">Actions</span>\n      </a>\n    </li>\n    <li class:is-active={selectedTab === 'achievements'}>\n      <a href=\"javascript:void(0)\"\n        on:click|preventDefault={() => updateSelectedTab('achievements')}>\n        <svg class=\"twemoji\">\n          <use href=\"../images/twemoji-sprite.svg#trophy\" />\n        </svg>\n        <span class=\"left-spaced\">Achievements</span>\n      </a>\n    </li>\n    <li class:is-active={selectedTab === 'resources'}>\n      <a href=\"javascript:void(0)\"\n        on:click|preventDefault={() => updateSelectedTab('resources')}>\n        <svg class=\"twemoji\">\n          <use href=\"../images/twemoji-sprite.svg#sparkles\" />\n        </svg>\n        <span class=\"left-spaced\">Resources</span>\n      </a>\n    </li>\n    <li class:is-active={selectedTab === 'stats'}>\n      <a href=\"javascript:void(0)\"\n        on:click|preventDefault={() => updateSelectedTab('stats')}>\n        <svg class=\"twemoji\">\n          <use href=\"../images/twemoji-sprite.svg#bar_chart\" />\n        </svg>\n        <span class=\"left-spaced\">Stats</span>\n      </a>\n    </li>\n    <li class:is-active={selectedTab === 'dev'}>\n      <a href=\"javascript:void(0)\"\n        on:click|preventDefault={() => updateSelectedTab('dev')}>\n        <svg class=\"twemoji\">\n          <use href=\"../images/twemoji-sprite.svg#woman_technologist\" />\n        </svg>\n        <span class=\"left-spaced\">Integration</span>\n      </a>\n    </li>\n    <li class:is-active={selectedTab === 'settings'}>\n      <a href=\"javascript:void(0)\"\n        on:click|preventDefault={() => updateSelectedTab('settings')}>\n        <svg class=\"twemoji\">\n          <use href=\"../images/twemoji-sprite.svg#gear\" />\n        </svg>\n        <span class=\"left-spaced\">Settings</span>\n      </a>\n    </li>\n  </ul>\n</div>\n\n<style lang='scss'>\n  #game-tabs-container {\n    margin-top: 1em;\n    margin-bottom: 1em;\n    font-size: 1.1em;\n  }\n\n  .left-spaced {\n    margin-left: 0.5em;\n  }\n</style>","<script>\n  import { game } from '../../../javascripts/stores/gameStore';\n  let created_at;\n\n  $: created_at = new Date($game.data.attributes.created_at);\n</script>\n\n\n<ul>\n  <li>Created : {created_at.toLocaleDateString()}</li>\n  <li>Active: {$game.data.attributes.archived ? 'No' : 'Yes'}</li>\n</ul>","<script>\n  export let assets;\n</script>\n\n{#each assets as {key, tuples}}\n  <div class=\"asset-wrapper\">\n    <div class=\"columns is-vcentered\">\n      <div class=\"column is-4 right\">\n        <strong>key :</strong>\n      </div>\n      <div class=\"column asset-value is-family-monospace\">\n        {key}\n      </div>\n    </div>\n    <div class=\"columns\">\n      <div class=\"column is-4 right\">\n        <strong>values :</strong>\n      </div>\n    </div>\n    {#each tuples as { namespaces, value }}\n      <div class=\"columns is-vcentered\">\n        <div class=\"column is-4 right namespace-container\">\n          {#if namespaces.includes('default')}\n            <p>\n              <span class=\"tag is-link\">\n                default\n              </span>\n            </p>\n            {#if namespaces.length > 1}\n              <p>\n                <span class=\"tag is-link\">\n                  + {namespaces.length - 1} \n                  {(namespaces.length - 1) === 1 ? 'other' : 'others'} \n                </span>\n              </p>\n            {/if}\n          {:else}\n            {#each namespaces as namespace}\n              <p>\n                <span class=\"tag is-link\">\n                  {namespace}\n                </span>\n              </p>\n            {/each}\n          {/if}\n        </div>\n        <div class=\"column asset-value is-family-monospace\">\n          {value}\n        </div>\n      </div>\n    {/each}\n  </div>\n{/each}\n\n<style lang=\"scss\">\n  .asset-wrapper {\n    border-radius: 0.15em;\n    background-color: #f6f8fa;\n    margin-bottom: 1em;\n    margin-top: 1em;\n    padding: 0.5em;\n    border: 1px solid #0096df;\n\n    .columns {\n      margin-bottom: 0;\n    }\n  }\n  .right {\n    text-align: right;\n  }\n  .namespace-container {\n    /* Mobile */\n    @media screen and (max-width: 768px) {\n      padding-bottom: 0.2em;\n      display: inline-flex;\n    }\n    p {\n      margin-right: 0.5em;\n    }\n  }\n  .asset-value {\n    color: gray;\n    word-break: break-all;\n\n    /* Mobile */\n    @media screen and (max-width: 768px) {\n      padding-top: 0;\n      margin-bottom: 1em;\n    }\n  }\n</style>","<script>\n  import { game } from '../../../../../javascripts/stores/gameStore';\n  export let assets;\n  export let formPrefix;\n\n\n  function removeAsset(assetIndex) {\n    assets = assets.filter((asset, index) => index !== assetIndex);\n  }\n\n  function addNewAsset() {\n    assets = [\n      ...assets,\n      {\n        key: '',\n        tuples: [\n          {\n            namespaces: $game.data.attributes.namespaces,\n            value: '',\n          },\n        ],\n      },\n    ]\n  }\n\n  /* When a user removes a namespace from the\n   * default value entry */\n  function createCustomEntry(assetIndex, namespace) {\n    /* Remove from where it belongs */\n    assets = assets.map((asset, index) => {\n      return index !== assetIndex ? asset : {\n        key: asset.key,\n        tuples: asset.tuples.map((tuple) => ({\n          namespaces: tuple.namespaces.filter((ns) => ns !== namespace),\n          value: tuple.value,\n        })),\n      };\n    });\n\n    /* Add a new custom entry */\n    assets = assets.map((asset, index) => {\n      return index !== assetIndex ? asset : {\n        key: asset.key,\n        tuples: [\n          ...asset.tuples,\n          {\n            namespaces: [namespace],\n            value: '',\n          }\n        ],\n      };\n    });\n  }\n\n  /* When the user removes a namespace from\n   * a custom entry */\n  function removeCustomEntry(assetIndex, namespace) {\n    /* Remove Custom Entry */\n    assets = assets.map((asset, index) => {\n      return index !== assetIndex ? asset : {\n        key: asset.key,\n        tuples: asset.tuples.filter((tuple) => !tuple.namespaces.includes(namespace)),\n      }\n    });\n\n    /* Add namespace to default Entry */\n    assets[0].tuples[0].namespaces = [\n      ...assets[0].tuples[0].namespaces,\n      namespace,\n    ]\n  }\n</script>\n\n<!-- Dummy value when no assets submitted -->\n<input class=\"input\" type=\"hidden\" name=\"{formPrefix}[assets][0][key]\" value=\"\">\n\n{#each assets as {key, tuples}, assetIndex}\n  <div class=\"asset-wrapper\">\n    <div class=\"columns\">\n      <div class=\"column right\">\n        <svg class=\"fa fill-destroy\" on:click={() => removeAsset(assetIndex)}>\n          <use href=\"../images/fontawesome-sprite.svg#regular-times-circle\" />\n        </svg>\n      </div>\n    </div>\n    <div class=\"columns is-vcentered\">\n      <div class=\"column is-4 right-label\">\n        <strong>key :</strong>\n      </div>\n      <div class=\"column asset-value\">\n        <input class=\"input is-family-monospace\" type=\"text\"\n          name=\"{formPrefix}[assets][{assetIndex}][key]\"\n          bind:value={key} placeholder=\"asset key\">\n      </div>\n    </div>\n    <div class=\"columns\">\n      <div class=\"column is-4 right-label\">\n        <strong>values :</strong>\n      </div>\n    </div>\n    {#each tuples as { namespaces, value }, tupleIndex}\n      <div class=\"columns is-vcentered\">\n        <div class=\"column is-4 right-label namespace-container\">\n          {#each namespaces as namespace}\n            <p>\n              <span class=\"tag is-link\">\n                {namespace}\n                <input class=\"input\" type=\"hidden\"\n                  name=\"{formPrefix}[assets][{assetIndex}][tuples][{tupleIndex}][namespaces][]\"\n                  value={namespace}>\n                {#if namespace !== 'default'}\n                  {#if namespaces.includes('default')}\n                    <button class=\"delete is-small\"\n                      on:click|preventDefault={createCustomEntry(assetIndex, namespace)}>\n                    </button>\n                  {:else}\n                    <button class=\"delete is-small\"\n                      on:click|preventDefault={removeCustomEntry(assetIndex, namespace)}>\n                    </button>\n                  {/if}\n                {/if}\n              </span>\n            </p>\n          {/each}\n        </div>\n        <div class=\"column asset-value is-family-monospace\">\n          <textarea class=\"input is-family-monospace\"\n            name=\"{formPrefix}[assets][{assetIndex}][tuples][{tupleIndex}][value]\"\n            bind:value={value} placeholder=\"asset value\" />\n        </div>\n      </div>\n    {/each}\n  </div>\n{/each}\n\n<div class=\"columns\">\n  <div class=\"column right-label\">\n    <button class=\"button is-primary is-outlined is-small\"\n      on:click|preventDefault={() => addNewAsset()}>\n      + New Asset\n    </button>\n  </div>\n</div>\n\n\n<style lang=\"scss\">\n  .right-label {\n    /* Desktop */\n    @media screen and (min-width: 768px) {\n      text-align: right;\n    }\n  }\n  .asset-wrapper {\n    border-radius: 0.15em;\n    background-color: #f6f8fa;\n    margin-bottom: 1em;\n    margin-top: 1em;\n    padding: 0.5em;\n    border: 1px solid #0096df;\n\n    .columns {\n      margin-bottom: 0;\n    }\n  }\n  .right {\n    text-align: right;\n  }\n  .namespace-container {\n    /* Mobile */\n    @media screen and (max-width: 768px) {\n      padding-bottom: 0.2em;\n      display: inline-flex;\n    }\n    p {\n      margin-right: 0.5em;\n    }\n  }\n  .asset-value {\n    color: gray;\n    word-break: break-all;\n\n    /* Mobile */\n    @media screen and (max-width: 768px) {\n      padding-top: 0;\n      margin-bottom: 1em;\n    }\n  }\n</style>","<script>\n  import { getContext, createEventDispatcher, onDestroy } from 'svelte';\n  import { fade } from 'svelte/transition';\n  import { createUrl } from '../../../../javascripts/utils/helpers';\n  import { fetchData, postFormData } from '../../../../javascripts/utils/helpers';\n  import AssetsIndex from '../SharedComps/Assets/AssetsIndex.svelte';\n  import AssetsForm from '../SharedComps/Assets/AssetsForm.svelte';\n  import { game } from '../../../../javascripts/stores/gameStore';\n  import { savingStatus } from '../../../../javascripts/stores/savingStore';\n  export let resource = {\n    attributes: {\n      name: '',\n      source: 'virtual',\n      assets: [\n        {\n          key: '',\n          tuples: [\n            {\n              namespaces: $game.data.attributes.namespaces,\n              value: '',\n            },\n          ],\n        },\n      ],\n    }\n  };\n\n  const dispatch = createEventDispatcher();\n  const apiProtocol = getContext('apiProtocol');\n  const apiHost = getContext('apiHost');\n  const userId = getContext('userId');\n\n  let error = null;\n  let displayEditForm = false;\n  let displaySavedStatus = false;\n  let displaySavedStatusTimeout;\n  let isExpandedSection = {\n    assets: false,\n  };\n\n  async function saveResource() {\n    savingStatus.set('saving');\n    let path, method;\n\n    if (resource.id) {\n      path = ['users', userId, 'games', $game.data.id, 'resources', resource.id];\n      method = 'PUT';\n    } else {\n      path = ['users', userId, 'games', $game.data.id, 'resources'];\n      method = 'POST';\n    }\n    const url = createUrl(apiProtocol, apiHost, ...path);\n    const formData = new FormData(document.getElementById(`${resource.id || 'new'}-resource-form`));\n    const res = await postFormData(url, formData, method);\n\n    if (!res.ok) {\n      const t = await res.text();\n      error = JSON.parse(t);\n      savingStatus.set('failed');\n    } else {\n      savingStatus.set('saved');\n      resetFormDisplay();\n      displaySavedBanner();\n\n      /* Dispatch new/updated action to Collection's list */\n      const updatedResource = await res.json();\n      dispatch('updateCollection', {\n        resource: updatedResource.data,\n        included: [],\n        deprecatedIncludedIds: [`resource#${updatedResource.data.id}`],\n      });\n    }\n  }\n\n  async function destroyResource() {\n    savingStatus.set('saving');\n    const path = ['users', userId, 'games', $game.data.id, 'resources', resource.id];\n    const url = createUrl(apiProtocol, apiHost, ...path);\n    const res = await postFormData(url, {}, 'DELETE');\n\n    if (res.status !== 204) {\n      const t = await res.text();\n      error = JSON.parse(t);\n      savingStatus.set('failed');\n    } else {\n      savingStatus.set('saved');\n      error = null;\n\n      /* Update resources list */\n      dispatch('removeCollectionMember', {\n        resource: {\n          id: resource.id,\n        },\n      });\n    }\n  }\n\n  /* Reload the original Resource Data if user hits the Cancel button */\n  async function resetResource() {\n    let path, method;\n    path = ['users', userId, 'games', $game.data.id, 'resources', resource.id];\n\n    const url = createUrl(apiProtocol, apiHost, ...path);\n    const res = await fetchData(url);\n\n    if (res.ok) {\n      const updatedResource = await res.json();\n      dispatch('updateCollection', {\n        resource: updatedResource.data,\n        included: [],\n        deprecatedIncludedIds: [`resource#${updatedResource.data.id}`],\n      });\n    }\n    resetFormDisplay();\n  }\n\n  function sourcePrettify(val) {\n    let result = 'Unknown';\n\n    switch(val) {\n      case 'virtual':\n        result = 'Virtual money';\n        break;\n      case 'list':\n        result = 'CSV List';\n        break;\n      case 'uri':\n        result = 'External URI';\n        break;\n      case 'scheme':\n        result = 'Scheme';\n    }\n    return result;\n  }\n\n  function toggleFormDisplay() {\n    displayEditForm = !displayEditForm;\n  }\n\n  function resetFormDisplay() {\n    displayEditForm = false;\n  }\n\n  function toggleSection(key, value) {\n    isExpandedSection[key] = value;\n  }\n\n  function displaySavedBanner() {\n    displaySavedStatus = true;\n    displaySavedStatusTimeout = setTimeout(() => {\n      displaySavedStatus = false;\n    }, 1000);\n  }\n\n  function flushError() {\n    error = null;\n  }\n\n  onDestroy(() => {\n    clearTimeout(displaySavedStatusTimeout);\n  });\n</script>\n\n\n<div class='item-box'>\n\n  <!-- Show Resource -->\n  <div class:is-hidden={displayEditForm || !resource.id}>\n    <div class=\"columns is-mobile\">\n      <div class=\"column\">\n        <h1 class=\"title is-4 has-vcentered-text item-name\">\n          <svg class=\"twemoji\">\n            <use href=\"../images/twemoji-sprite.svg#white_medium_star\" />\n          </svg>\n          <span class:is-hidden={displayEditForm}>\n            {resource.attributes.name}\n          </span>\n          <svg class=\"fa item-edit fill-primary no-hover\" class:is-hidden={displayEditForm}\n            on:click={toggleFormDisplay}>\n            <use href=\"../images/fontawesome-sprite.svg#regular-edit\" />\n          </svg>\n        </h1>\n      </div>\n    </div>\n\n    {#if displaySavedStatus}\n      <div class=\"columns\" out:fade=\"{{delay: 2000, duration: 200}}\">\n        <div class=\"column is-12 saved-collection\">\n          <svg class=\"fa saved\">\n            <use href=\"../images/fontawesome-sprite.svg#solid-check-circle\" />\n          </svg>\n          Updated !\n        </div>\n      </div>\n    {/if}\n\n    <table class=\"table\">\n      <tbody>\n        <tr>\n          <td class=\"right\">\n            Source Type :\n          </td>\n          <td class=\"is-value\">\n            {sourcePrettify(resource.attributes.source)}\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <h1 class=\"title is-5 byproduct-title\"\n      class:is-disabled={!resource.attributes.assets.length}>\n      <svg class=\"chevron\" on:click={() => toggleSection('assets', true)}\n        class:is-hidden={isExpandedSection.assets}>\n        <use href=\"../images/fontawesome-sprite.svg#solid-chevron-double-right\" />\n      </svg>\n      <svg class=\"chevron\" on:click={() => toggleSection('assets', false)}\n        class:is-hidden={!isExpandedSection.assets}>\n        <use href=\"../images/fontawesome-sprite.svg#solid-chevron-double-down\" />\n      </svg>\n      <svg class=\"twemoji\">\n        <use href=\"../images/twemoji-sprite.svg#package\" />\n      </svg>\n      Assets\n      {#if resource.attributes.assets.length}\n        <span class=\"quantity\">({resource.attributes.assets.length})</span>\n      {/if}\n    </h1>\n\n    {#if isExpandedSection.assets}\n      {#if resource.attributes.assets.length}\n        <AssetsIndex assets={resource.attributes.assets} />\n      {:else}\n        <p class=\"no-conditions\">\n          No assets yet\n        </p>\n      {/if}\n    {/if}\n\n\n    <p class=\"help\">\n      Need help? See \n      <a href=\"https://doc/place2be.io/resources\" target=\"_blank\">\n        <span>Doc</span>\n        <svg class=\"fa fill-primary no-hover\">\n          <use href=\"../images/fontawesome-sprite.svg#regular-external-link-square\" />\n        </svg>\n      </a>\n    </p>\n  </div>\n\n\n\n\n\n\n\n\n\n  <!-- Edit Resource -->\n  <div class:is-hidden={!displayEditForm && resource.id}>\n    <form id=\"{resource.id || 'new'}-resource-form\"\n      on:submit|preventDefault={saveResource}>\n\n      <div class=\"notification is-danger\" class:is-hidden={!error} >\n        <button class=\"delete\" on:click|preventDefault={() => flushError()} ></button>\n        <h1 class='title is-5'>\n          Unable to Update Resource :\n        </h1>\n        <ul>\n          {#if error}\n            {#each Object.entries(error) as [ key, ar ]}\n              <li>{key} : {ar}</li>\n            {/each}\n          {/if}\n        </ul>\n      </div>\n\n      <h1 class=\"title is-5 byproduct-title\">\n        <svg class=\"twemoji\">\n          <use href=\"../images/twemoji-sprite.svg#card_file_box\" />\n        </svg>\n        Properties\n      </h1>\n\n      <div class=\"field is-horizontal\">\n        <div class=\"field-label is-normal\">\n          <label class=\"label\">Name :</label>\n        </div>\n        <div class=\"field-body\">\n          <div class=\"field\">\n            <input class=\"input reasonable-width\" type=\"text\" name=\"resource[name]\"\n              bind:value={resource.attributes.name} placeholder=\"Resource name\">\n          </div>\n        </div>\n      </div>\n\n      <div class=\"field is-horizontal\">\n        <div class=\"field-label is-normal\">\n          <label class=\"label\">Source Type :</label>\n        </div>\n        <div class=\"field-body\">\n          <div class=\"select\">\n            <select name=\"resource[source]\" bind:value={resource.attributes.source}>\n              <option value='virtual'>Virtual money</option>\n              <option value='list' disabled='disabled'>CSV List</option>\n              <option value='uri' disabled='disabled'>External URI</option>\n              <option value='scheme' disabled='disabled'>Scheme</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n\n      <h1 class=\"title is-5 byproduct-title\">\n        <svg class=\"twemoji\">\n          <use href=\"../images/twemoji-sprite.svg#package\" />\n        </svg>\n        Assets\n        <span class=\"note\">(optional)</span>\n      </h1>\n      <div class=\"content\">\n        <ul class=\"help\">\n          <li>\n            Assets are key-value entries you can associate with a Resource.\n          </li>\n          <li>\n            Everytime a Resource will be involved, its associated assets will be returned as well.\n          </li>\n          <li>\n            You can have multiple assets per Resource, carrying any information you want.\n          </li>\n          <li>\n            See assets\n            <a href=\"https://doc/place2be.io/assets\" target=\"_blank\">\n              <span>Doc</span>\n              <svg class=\"fa fill-primary no-hover\">\n                <use href=\"../images/fontawesome-sprite.svg#regular-external-link-square\" />\n              </svg>\n            </a>\n            for common use cases and examples.\n          </li>\n        </ul>\n      </div>\n\n      <AssetsForm assets={resource.attributes.assets} formPrefix=\"resource\"/>\n\n      <div class=\"columns is-vcentered\">\n        <div class=\"column is-narrow\">\n          <p class=\"help\">\n            Need help? See \n            <a href=\"https://doc/place2be.io/resources\" target=\"_blank\">\n              <span>Doc</span>\n              <svg class=\"fa fill-primary no-hover\">\n                <use href=\"../images/fontawesome-sprite.svg#regular-external-link-square\" />\n              </svg>\n            </a>\n          </p>\n        </div>\n        <div class=\"column\">\n          <div class=\"buttons\">\n            <button class=\"button is-primary\">\n            {#if !resource.id}\n              Create\n            {:else}\n              Update\n            {/if}\n            </button>\n            {#if resource.id}\n              <button class=\"button is-primary is-light\"\n                on:click|preventDefault={resetResource}>\n                Cancel\n              </button>\n              <button class=\"button is-danger\"\n                on:click|preventDefault={destroyResource}>\n                Delete\n              </button>\n            {/if}\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n\n\n<style lang='scss'>\n  .right {\n    text-align: right;\n  }\n  .is-value {\n    color: gray;\n    font-style: italic;\n    word-break: break-all;\n  }\n  button.is-danger {\n    color: #cb2431 !important;\n    background: white !important;\n    border: 1px solid #cb2431 !important;\n  }\n</style>","<script>\n  import { capitalizeFirstLetter } from '../../../../../../javascripts/utils/helpers';\n  export let formPrefix;\n  export let condition;\n  export let underlyings;\n  let underlying;\n\n  const periodEnum = {\n    0: 'past year',\n    1: 'past 90 days',\n    2: 'past 30 days',\n    3: 'past 7 days',\n    4: 'past 5 days',\n    5: 'past 3 days',\n    6: 'past 2 days',\n    7: 'past 24 hours',\n  };\n\n  const comparisonEnum = {\n    eq: '= equal to',\n    gteq: '≥ greater than or equal to',\n    lteq: '≤ less than or equal to',\n    shortlist: '[⟷] within',\n  }\n\n  function destroyCondition() {\n    condition.attributes._destroy = true;\n  }\n\n  $: underlying = underlyings.find((u) => \n    u.id === condition.relationships.underlying.data.id &&\n    u.type === condition.relationships.underlying.data.type\n  );\n</script>\n\n\n<div class=\"content\" class:is-hidden={condition.attributes._destroy}>\n  <div class=\"columns is-mobile\">\n    <div class=\"column\">\n      <svg class=\"fa check\">\n        <use href=\"../images/fontawesome-sprite.svg#regular-check-circle\" />\n      </svg>\n      {#if condition.attributes.inverted}\n        <span class=\"not\">NOT</span>\n      {/if}\n      Trigged <strong>'{underlying.attributes.name}'</strong>\n    </div>\n    {#if formPrefix}\n      <div class=\"column is-narrow\">\n        <svg class=\"fa fill-destroy\" on:click={destroyCondition}>\n          <use href=\"../images/fontawesome-sprite.svg#regular-times-circle\" />\n        </svg>\n      </div>\n    {/if}\n  </div>\n  <ul>\n    <li>\n      mininum\n      <strong>\n        {condition.attributes.criteria.count}\n        {parseInt(condition.attributes.criteria.count) === 1 ? 'time' : 'times'}\n      </strong>;\n    </li>\n    {#each condition.attributes.criteria.validations as validation, i (i)}\n      <li>\n        with a <strong>{validation.attribute}</strong> {comparisonEnum[validation.comparison]}\n        <strong>\n          {validation.value}\n        </strong>;\n\n        {#if formPrefix}\n          <input type=\"hidden\" name=\"{formPrefix}[criteria][validations][{i}][attribute]\"\n          value=\"{validation.attribute}\">\n          <input type=\"hidden\" name=\"{formPrefix}[criteria][validations][{i}][comparison]\"\n          value=\"{validation.comparison}\">\n          <input type=\"hidden\" name=\"{formPrefix}[criteria][validations][{i}][value]\"\n          value=\"{validation.value}\">\n        {/if}\n      </li>\n    {/each}\n    <li>\n      over the <strong>{periodEnum[condition.attributes.criteria.period]}</strong>.\n    </li>\n  </ul>\n\n  {#if formPrefix}\n    <input type=\"hidden\" name=\"{formPrefix}[criteria][count]\"\n      value=\"{condition.attributes.criteria.count}\">\n\n    <input type=\"hidden\" name=\"{formPrefix}[criteria][period]\"\n    value=\"{condition.attributes.criteria.period}\">\n\n    <input type=\"hidden\" name=\"{formPrefix}[inverted]\"\n      value=\"{condition.attributes.inverted}\">\n\n    <input type=\"hidden\" name=\"{formPrefix}[underlying_type]\"\n      value=\"{capitalizeFirstLetter(condition.relationships.underlying.data.type)}\">\n\n    <input type=\"hidden\" name=\"{formPrefix}[underlying_id]\"\n      value=\"{condition.relationships.underlying.data.id}\">\n\n    <input type=\"hidden\" name=\"{formPrefix}[condition_type]\" value=\"action_trigger\">\n\n    {#if condition.attributes._destroy}\n      <input type=\"hidden\" name=\"{formPrefix}[_destroy]\" value=\"true\">\n    {/if}\n  {/if}\n</div>\n\n\n<style lang=\"scss\">\n  .check {\n    fill: #0096df;\n  }\n  ul {\n    font-size: 0.8em;\n    font-style: italic;\n  }\n  .not {\n    color: #c40000;\n  }\n</style>","<script>\n  import { createEventDispatcher } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n  export let underlyings;\n  let actions;\n  let action;\n  let count = 1;\n  let period = 0;\n  let underlyingId = null;\n  const underlyingType = 'Action';\n  const attribute = 'score';\n  let value;\n  let comparison;\n  let inverted = false;\n  let error = null;\n\n  const periodEnum = {\n    0: 'past year',\n    1: 'past 90 days',\n    2: 'past 30 days',\n    3: 'past 7 days',\n    4: 'past 5 days',\n    5: 'past 3 days',\n    6: 'past 2 days',\n    7: 'past 24 hours',\n  };\n\n  function addCondition() {\n    error = null;\n    const scoreValidation = value;\n\n    if (isNaN(parseInt(count))) {\n      error = {\n        ...error,\n        'trigger count': `Trigger count must be a number, not \"${count}\"`,\n      };\n    }\n    if (action.attributes.actionType === 'int' ||\n        action.attributes.actionType === 'float') {\n      if(isNaN(parseInt(value))) {\n        error = {\n          ...error,\n          attribute: `Score value must be a number because \\\n  ${action.attributes.name}'s Scoretype is ${action.attributes.actionType}`,\n        };\n      }\n    } else if (action.attributes.actionType === 'string') {\n      if (!value || !Array.isArray(value.split(','))) {\n        error = {\n          ...error,\n          attribute: `Score value must be a comma separated list of\naccepted values because ${action.attributes.name}'s Scoretype \\\nis ${action.attributes.actionType}`,\n        };\n      }\n    }\n    \n    if (error) return;\n\n    /* Gather form */\n    const newCondition = {\n      type: 'condition',\n      relationships: {\n        underlying: {\n          data: {\n            id: underlyingId,\n            type: 'action',\n          }\n        }\n      },\n      attributes: {\n        conditionType: 'action_trigger',\n        inverted,\n        criteria: {\n          count,\n          period,\n          validations: [{\n            attribute,\n            comparison,\n            value,\n          }],\n        }\n      }\n    };\n\n    /* Dispatch to Conditions Component */\n    dispatch('addCondition', {\n      condition: newCondition,\n    });\n  }\n\n  function flushError() {\n    error = null;\n  }\n\n  $: actions= underlyings.filter((e) => e.type === 'action');\n  $: action = actions.find((a) => a.id === underlyingId);\n</script>\n\n\n<div class=\"columns\">\n  <div class=\"column\">\n    <div class=\"field is-horizontal\">\n      <div class=\"field-label\"\n        class:has-hvcentered-content={!actions.length}\n        class:is-normal={actions.length}>\n        <label class=\"label\">Action :</label>\n      </div>\n      <div class=\"field-body\">\n        <div class=\"field\">\n          {#if actions.length}\n            <div class=\"select\">\n              <select bind:value={underlyingId}>\n                <option value=\"\">--</option>\n                {#each actions as action, i (i)}\n                  <option value=\"{action.id}\">{action.attributes.name}</option>\n                {/each}\n              </select>\n            </div>\n          {:else}\n            <p class=\"no-actions\">No Action defined in the Action tab yet.</p>\n          {/if}\n        </div>\n      </div>\n    </div>\n\n    {#if actions.length}\n      \n      <div class=\"notification is-warning\" class:is-hidden={!error} >\n        <button class=\"delete\" on:click|preventDefault={() => flushError()} ></button>\n        <h1 class='title is-5'>\n          Unable to add Condition :\n        </h1>\n        <ul>\n          {#if error}\n            {#each Object.entries(error) as [ key, ar ]}\n              <li>{key} : {ar}</li>\n            {/each}\n          {/if}\n        </ul>\n      </div>\n\n\n      <div class=\"field is-horizontal\">\n        <div class=\"field-label is-normal\">\n          <label class=\"label\">Triggered :</label>\n        </div>\n        <div class=\"field-body\">\n          <div class=\"field\">\n            <p class=\"has-vcentered-content\">\n              minimum <input class=\"input count\" type=\"text\" bind:value={count}>\n              <strong>{parseInt(count) === 1 ? 'time' : 'times'}</strong>\n            </p>\n          </div>\n        </div>\n      </div>\n\n\n      <div class=\"field is-horizontal\">\n        <div class=\"field-label is-normal\">\n          <label class=\"label\">Over the :</label>\n        </div>\n        <div class=\"field-body\">\n          <div class=\"field\">\n            <div class=\"select\">\n              <select bind:value={period}>\n                {#each Object.entries(periodEnum) as [k, v], i (i)}\n                  <option value=\"{k}\">{v}</option>\n                {/each}\n              </select>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {#if underlyingId}\n        <div class=\"field is-horizontal\">\n          <div class=\"field-label is-normal\">\n            <label class=\"label\">Score :</label>\n          </div>\n          <div class=\"field-body\">\n              <div class=\"field\">\n                <p class=\"control\">\n                  {#if action.attributes.actionType === 'boolean'}\n                    <div class=\"select\">\n                      <select bind:value={comparison}>\n                        <option value=\"eq\">= equal to</option>\n                      </select>\n                    </div>\n                  {:else if action.attributes.actionType === 'int' ||\n                            action.attributes.actionType === 'float'}\n                    <div class=\"select\">\n                      <select bind:value={comparison}>\n                        <option value=\"gteq\">≥ greater than or equal to</option>\n                        <option value=\"lteq\">≤ less than or equal to</option>\n                        <option value=\"eq\">= equal to</option>\n                      </select>\n                    </div>\n                  {:else}\n                    <!-- string's shortlist -->\n                    <div class=\"select\">\n                      <select bind:value={comparison}>\n                        <option value=\"shortlist\">[⟷] within</option>\n                      </select>\n                    </div>\n                  {/if}\n                </p>\n              </div>\n              <div class=\"field\">\n                <div class=\"control\">\n                  {#if action.attributes.actionType === 'boolean'}\n                    <div class=\"select\">\n                      <select bind:value={value}>\n                        <option value=\"1\">Pass</option>\n                        <option value=\"0\">Fail</option>\n                      </select>\n                    </div>\n                  {:else if action.attributes.actionType === 'int' ||\n                            action.attributes.actionType === 'float' ||\n                            action.attributes.actionType === 'string'}\n                    <input type=\"text\" class=\"input reasonable-width\"\n                      bind:value={value} required>\n                  {:else if action.attributes.actionType === 'shortlist'}\n                    <input type=\"text\" class=\"input reasonable-width\"\n                      bind:value={value}\n                      placeholder=\"comma separated list\"\n                      required>\n                  {/if}\n                </div>\n              </div>\n              <p class=\"help\">Possible score values depend on selected Action's scoretype</p>\n          </div>\n        </div>\n      {/if}\n\n      <div class=\"field is-horizontal\">\n        <div class=\"field-label is-normal\">\n          <label class=\"label\">Inverted ?</label>\n        </div>\n        <div class=\"field-body\">\n          <div class=\"field\">\n            <label class=\"checkbox\">\n              <p class=\"help\">\n                <input type=\"checkbox\" bind:checked={inverted} />\n                The condition MUST NOT be met to be validated 🙃\n              </p>\n            </label>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"columns\">\n        <div class=\"column\">\n          <button class=\"button is-primary is-outlined\"\n            on:click|preventDefault={addCondition} disabled={!underlyingId}>\n            Add\n          </button>\n        </div>\n      </div>\n    {/if}\n  </div>\n</div>\n\n<style lang=\"scss\">\n  .no-actions {\n    font-style: italic;\n    color: gray;\n    margin: 1em 1em 1em 0.5em; /* top right bottom left */\n\n    /* Mobile */\n    @media screen and (max-width: 768px) {\n      text-align: center;\n    }\n  }\n</style>","<script>\n  import { capitalizeFirstLetter } from '../../../../../../javascripts/utils/helpers';\n  export let formPrefix;\n  export let condition;\n  export let underlyings;\n  let underlying;\n\n  function destroyCondition() {\n    condition.attributes._destroy = true;\n  }\n\n  $: underlying = underlyings.find((u) => \n    u.id === condition.relationships.underlying.data.id &&\n    u.type === condition.relationships.underlying.data.type\n  );\n</script>\n\n<div class=\"content\" class:is-hidden={condition.attributes._destroy}>\n  <div class=\"columns is-mobile\">\n    <div class=\"column\">\n      <svg class=\"fa check\">\n        <use href=\"../images/fontawesome-sprite.svg#regular-check-circle\" />\n      </svg>\n      {#if condition.attributes.inverted}\n        <span class=\"not\">NOT</span>\n      {/if}\n      Unlocked <strong>'{underlying.attributes.name}'</strong>\n    </div>\n    {#if formPrefix}\n      <div class=\"column is-narrow\">\n        <svg class=\"fa fill-destroy\" on:click={destroyCondition}>\n          <use href=\"../images/fontawesome-sprite.svg#regular-times-circle\" />\n        </svg>\n      </div>\n\n      <input type=\"hidden\" name=\"{formPrefix}[inverted]\"\n        value=\"{condition.attributes.inverted}\">\n\n      <input type=\"hidden\" name=\"{formPrefix}[underlying_type]\"\n        value=\"{capitalizeFirstLetter(condition.relationships.underlying.data.type)}\">\n\n      <input type=\"hidden\" name=\"{formPrefix}[underlying_id]\"\n        value=\"{condition.relationships.underlying.data.id}\">\n\n      <input type=\"hidden\" name=\"{formPrefix}[condition_type]\" value=\"unlocked_achievement\">\n\n      {#if condition.attributes._destroy}\n        <input type=\"hidden\" name=\"{formPrefix}[_destroy]\" value=\"true\">\n      {/if}\n    {/if}\n  </div>\n</div>\n\n<style lang=\"scss\">\n  .check {\n    fill: #0096df;\n  }\n  .not {\n    color: #c40000;\n  }\n</style>","<script>\n  import { createEventDispatcher } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n  export let underlyings;\n  let achievements;\n  let achievement;\n  let underlyingId = null;\n  let inverted = false;\n  const underlyingType = 'Achievement';\n\n  function addCondition() {\n    /* Gather form */\n    const newCondition = {\n      type: 'condition',\n      relationships: {\n        underlying: {\n          data: {\n            id: underlyingId,\n            type: 'achievement',\n          }\n        }\n      },\n      attributes: {\n        conditionType: 'unlocked_achievement',\n        inverted,\n      }\n    };\n\n    /* Dispatch to Conditions Component */\n    dispatch('addCondition', {\n      condition: newCondition,\n    });\n  }\n\n  $: achievements= underlyings.filter((e) => e.type === 'achievement');\n  $: achievement = achievements.find((a) => a.id === underlyingId);\n</script>\n\n<div class=\"columns\">\n  <div class=\"column\">\n    <div class=\"field is-horizontal\">\n      <div class=\"field-label\"\n        class:has-hvcentered-content={!achievements.length}\n        class:is-normal={achievements.length}>\n        <label class=\"label\">Achievement :</label>\n      </div>\n      <div class=\"field-body\">\n        <div class=\"field\">\n          {#if achievements.length}\n            <div class=\"select\">\n              <select bind:value={underlyingId}>\n                <option value=\"\">--</option>\n                {#each achievements as achievement, i (i)}\n                  <option value=\"{achievement.id}\">{achievement.attributes.name}</option>\n                {/each}\n              </select>\n            </div>\n          {:else}\n            <p class=\"no-achievements\">No Achievement defined in the Achievement tab yet.</p>\n          {/if}\n        </div>\n      </div>\n    </div>\n\n    <div class=\"field is-horizontal\">\n      <div class=\"field-label is-normal\">\n        <label class=\"label\">Inverted ?</label>\n      </div>\n      <div class=\"field-body\">\n        <div class=\"field\">\n          <label class=\"checkbox\">\n            <p class=\"help\">\n              <input type=\"checkbox\" bind:checked={inverted} />\n              The achievement MUST NOT be unlocked 🙃\n            </p>\n          </label>\n        </div>\n      </div>\n    </div>\n\n    {#if achievements.length}\n      <div class=\"columns\">\n        <div class=\"column\">\n          <button class=\"button is-primary is-outlined\"\n            on:click|preventDefault={addCondition} disabled={!underlyingId}>\n            Add\n          </button>\n        </div>\n      </div>\n    {/if}\n  </div>\n</div>\n\n<style lang=\"scss\">\n  .no-achievements {\n    font-style: italic;\n    color: gray;\n    margin: 1em 1em 1em 0.5em; /* top right bottom left */\n\n    /* Mobile */\n    @media screen and (max-width: 768px) {\n      text-align: center;\n    }\n  }\n</style>","<script>\n  import { capitalizeFirstLetter } from '../../../../../../javascripts/utils/helpers';\n  export let formPrefix;\n  export let condition;\n  // eslint-disable-next-line unused-export-let\n  export let underlyings = [];\n\n  function destroyCondition() {\n    condition.attributes._destroy = true;\n  }\n</script>\n\n<div class=\"content\" class:is-hidden={condition.attributes._destroy}>\n  <div class=\"columns is-mobile\">\n    <div class=\"column\">\n      <svg class=\"fa check\">\n        <use href=\"../images/fontawesome-sprite.svg#regular-check-circle\" />\n      </svg>\n      {#if condition.attributes.inverted}\n        <span class=\"not\">NOT</span>\n      {/if}\n      Between <strong>{condition.attributes.criteria.from}</strong> and\n      <strong>{condition.attributes.criteria.to}</strong> (both included)\n    </div>\n    {#if formPrefix}\n      <div class=\"column is-narrow\">\n        <svg class=\"fa fill-destroy\" on:click={destroyCondition}>\n          <use href=\"../images/fontawesome-sprite.svg#regular-times-circle\" />\n        </svg>\n      </div>\n\n      <input type=\"hidden\" name=\"{formPrefix}[inverted]\"\n        value=\"{condition.attributes.inverted}\">\n\n      <input type=\"hidden\" name=\"{formPrefix}[criteria][from]\"\n      value=\"{(new Date(condition.attributes.criteria.from)).toLocaleDateString()}\">\n\n      <input type=\"hidden\" name=\"{formPrefix}[criteria][to]\"\n      value=\"{(new Date(condition.attributes.criteria.to)).toLocaleDateString()}\">\n\n      <input type=\"hidden\" name=\"{formPrefix}[condition_type]\" value=\"time_frame\">\n\n      {#if condition.attributes._destroy}\n        <input type=\"hidden\" name=\"{formPrefix}[_destroy]\" value=\"true\">\n      {/if}\n    {/if}\n  </div>\n</div>\n\n<style lang=\"scss\">\n  .check {\n    fill: #0096df;\n  }\n  .not {\n    color: #c40000;\n  }\n</style>","<script>\n  import { createEventDispatcher } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n  export const underlyings = []; // not used\n  let inverted = false;\n  let from;\n  let to;\n  let validDates = false;\n\n  function addCondition() {\n    /* Gather form */\n    const newCondition = {\n      type: 'condition',\n      attributes: {\n        conditionType: 'time_frame',\n        inverted,\n        criteria: {\n          from,\n          to,\n        },\n      },\n    };\n\n    /* Dispatch to Conditions Component */\n    dispatch('addCondition', {\n      condition: newCondition,\n    });\n  }\n\n  $: validDates = !isNaN(new Date(from)) &&\n                  !isNaN(new Date(to))   &&\n                  (from <= to);\n</script>\n\n<div class=\"columns\">\n  <div class=\"column\">\n    <div class=\"field is-horizontal\">\n      <div class=\"field-label is-normal\">\n        <label class=\"label\">From : </label>\n      </div>\n      <div class=\"field-body\">\n        <div class=\"field\">\n          <input type=\"date\" class=\"input date-width\" bind:value={from}>\n        </div>\n      </div>\n    </div>\n\n\n    <div class=\"field is-horizontal\">\n      <div class=\"field-label is-normal\">\n        <label class=\"label\">To : </label>\n      </div>\n      <div class=\"field-body\">\n        <div class=\"field\">\n          <input type=\"date\" class=\"input date-width\" bind:value={to}>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"field is-horizontal\">\n      <div class=\"field-label is-normal\">\n        <label class=\"label\">Inverted ?</label>\n      </div>\n      <div class=\"field-body\">\n        <div class=\"field\">\n          <label class=\"checkbox\">\n            <p class=\"help\">\n              <input type=\"checkbox\" bind:checked={inverted} />\n              Must be OUT of the time frame to be valid 🙃\n            </p>\n          </label>\n        </div>\n      </div>\n    </div>\n\n\n    <div class=\"columns\">\n      <div class=\"column\">\n        <button class=\"button is-primary is-outlined\"\n          on:click|preventDefault={addCondition} disabled={!validDates}>\n          Add\n        </button>\n      </div>\n    </div>\n  </div>\n</div>","<script>\n  import ActionTriggerShow from './ConditionsShows/ActionTrigger.svelte';\n  import ActionTriggerForm from './ConditionsForms/ActionTrigger.svelte';\n  import UnlockedAchievementShow from './ConditionsShows/UnlockedAchievement.svelte';\n  import UnlockedAchievementForm from './ConditionsForms/UnlockedAchievement.svelte';\n  import TimeFrameShow from './ConditionsShows/TimeFrame.svelte';\n  import TimeFrameForm from './ConditionsForms/TimeFrame.svelte';\n  import { game } from '../../../../../javascripts/stores/gameStore';\n  import { createEventDispatcher } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  export let formPrefix;\n  export let conditions;\n  let newConditionType;\n\n  const conditionsShowsComponents = {\n    action_trigger: ActionTriggerShow,\n    unlocked_achievement: UnlockedAchievementShow,\n    time_frame: TimeFrameShow,\n  };\n  const conditionsFormsComponents = {\n    action_trigger: ActionTriggerForm,\n    unlocked_achievement: UnlockedAchievementForm,\n    time_frame: TimeFrameForm,\n  }\n\n  function addCondition(evt){\n    dispatch('updateConditions', {\n      conditions: [...conditions, evt.detail.condition],\n    });\n    newConditionType = \"\";\n  }\n</script>\n\n\n<div>\n  <hr>\n  {#if !conditions || !conditions.length}\n    <p class=\"no-conditions\">\n      No conditions yet\n    </p>\n  {:else}\n    <ul class=\"conditions-list\">\n      {#each conditions as condition, i (i)}\n        <li>\n          <svelte:component\n            {condition}\n            formPrefix={formPrefix ? `${formPrefix}[${i}]` : undefined}\n            underlyings={$game.included}\n            this={conditionsShowsComponents[condition.attributes.conditionType]}\n            on:message/>\n        </li>\n      {/each}\n    </ul>\n  {/if}\n  <hr>\n</div>\n\n{#if formPrefix}\n  <div class=\"new-condition-container\">\n    <div class=\"columns\">\n      <div class=\"column is-narrow-desktop has-vcentered-content new-condition-label\">\n        New Condition :\n      </div>\n      <div class=\"column is-narrow-desktop\">\n        <div class=\"select is-link\">\n          <select bind:value={newConditionType}>\n            <option value=\"\">--</option>\n            <option value=\"action_trigger\">Action trigger</option>\n            <option value=\"unlocked_achievement\">Unlocked Achievement</option>\n            <option value=\"time_frame\">Time frame</option>\n            <option value=\"scarcity\" disabled>Scarcity</option>\n            <option value=\"lottery\" disabled>Lottery</option>\n            <option value=\"subcondition\" disabled>Sub Condition Set</option>\n          </select>\n        </div>\n      </div>\n    </div>\n\n\n    <svelte:component\n      underlyings={$game.included}\n      this={conditionsFormsComponents[newConditionType]}\n      on:addCondition={addCondition}/>\n  </div>\n{/if}\n\n\n\n<style lang=\"scss\">\n  .new-condition-container {\n    background-color: #f6f8fa;\n    padding: 1em;\n  }\n  .conditions-list {\n    li {\n      margin-bottom: 2em;\n    }\n  }\n  .new-condition-label {\n    align-self: center;\n  }\n</style>","<script>\n  import Conditions from './Conditions.svelte';\n  import { fetchData } from '../../../../../javascripts/utils/helpers';\n  import { game } from '../../../../../javascripts/stores/gameStore';\n  export let relation = {\n    attributes: {\n      count: 1,\n    },\n  };\n  export let conditions;\n  export let formPrefix;\n  let error = null;\n\n  function updateConditions(evt) {\n    conditions = evt.detail.conditions;\n  }\n\n  function filterConditions(relation, game) {\n    if (!relation.relationships)\n      return [];\n\n    const conditionIds = relation.relationships.conditions.data.map((c) => c.id);\n\n    return game.included.filter((e) => (\n      conditionIds.includes(e.id) && e.type === 'condition'\n    ));\n  }\n\n  $: conditions = filterConditions(relation, $game);\n</script>\n\n<div class=\"relation-wrapper\">\n  {#if formPrefix}\n    <input type=\"hidden\" name=\"{formPrefix}[game_id]\"\n      value=\"{$game.data.id}\">\n\n    <div class=\"field\">\n      <label class=\"label\">\n        Type\n      </label>\n      <!-- Desktop -->\n      <div class=\"select is-hidden-desktop\">\n        <select name=\"{formPrefix}[relation_type]\"\n          bind:value={relation.attributes.relationType}>\n          <option value='binomial'>Binomial</option>\n          <option value='xor'>eXclusive OR</option>\n        </select>\n      </div>\n\n      <!-- Mobile -->\n      <div class=\"select is-hidden-touch\">\n        <select name=\"{formPrefix}[relation_type]\"\n          bind:value={relation.attributes.relationType}>\n          <option value='binomial'>Binomial (meet at least X among Y cond.)</option>\n          <option value='xor'>eXclusive OR (meet exactly 1 among Y cond.)</option>\n        </select>\n      </div>\n    </div>\n  {/if}\n\n  <div class=\"field\">\n    <div class=\"columns is-variable is-1 compact-mobile\"\n      class:is-hidden={relation.attributes.relationType == 'xor'}>\n      <div class=\"column is-narrow-desktop is-gapless-desktop has-vcentered-text\">\n        Player must validate \n      </div>\n      <div class=\"column is-narrow-desktop has-vcentered-text\">\n        <em>minimum</em>\n        <input type=\"text\" class=\"input count\"\n          name=\"{formPrefix}[count]\" bind:value={relation.attributes.count}\n          disabled={formPrefix === undefined}>\n        {relation.attributes.count === 1 ? 'condition' : 'conditions'}\n      </div>\n      <div class=\"column is-narrow-desktop has-vcentered-text\">\n         among the following ↴ :\n      </div>\n    </div>\n\n    <div class=\"columns is-variable is-1 compact-mobile\"\n      class:is-hidden={relation.attributes.relationType == 'binomial'}>\n      <div class=\"column is-narrow-desktop is-gapless-desktop has-vcentered-text\">\n        Player must validate \n      </div>\n      <div class=\"column is-narrow-desktop has-vcentered-text\">\n        <em>exactly</em>\n        <input type=\"text\" class=\"input count\"\n      value=\"1\" disabled=\"true\">\n        condition\n      </div>\n      <div class=\"column is-narrow-desktop has-vcentered-text\">\n         among the following ↴ :\n      </div>\n    </div>\n  </div>\n\n  <Conditions\n    {conditions}\n    formPrefix={ formPrefix ? `${formPrefix}[conditions_attributes]` : undefined}\n    on:updateConditions={updateConditions}/>\n\n</div>\n\n<style lang=\"scss\">\n  div.relation-wrapper {\n    max-width: 96%;\n    margin-left: auto;\n    margin-right: auto;\n  }\n  div.compact-mobile {\n    /* Mobile */\n    @media screen and (max-width: 768px) {\n      margin-top: 1em;\n\n      div.column {\n        padding: 0.15em;\n      }\n    }\n  }\n</style>","<script>\n  import { getContext, createEventDispatcher, onDestroy } from 'svelte';\n  import { fade } from 'svelte/transition';\n  import { createUrl } from '../../../../javascripts/utils/helpers';\n  import { fetchData, postFormData } from '../../../../javascripts/utils/helpers';\n  import Relation from '../SharedComps/Relation/Relation.svelte';\n  import { game } from '../../../../javascripts/stores/gameStore';\n  import { savingStatus } from '../../../../javascripts/stores/savingStore';\n  export let action = {\n    attributes: {\n      name: '',\n      actionType: 'boolean',\n      tags: [],\n    }\n  };\n  let relation;\n  let isExpandedSection = {\n    conditions: false,\n  }\n\n  const dispatch = createEventDispatcher();\n  const apiProtocol = getContext('apiProtocol');\n  const apiHost = getContext('apiHost');\n  const userId = getContext('userId');\n\n  let error = null;\n  let displayEditForm = false;\n  let displaySavedStatus = false;\n  let displaySavedStatusTimeout;\n\n  function updateRelation(event) {\n    relation = event.detail.relation;\n  }\n\n  async function saveAction() {\n    savingStatus.set('saving');\n    let path, method;\n\n    if (action.id) {\n      path = ['users', userId, 'games', $game.data.id, 'actions', action.id];\n      method = 'PUT';\n    } else {\n      path = ['users', userId, 'games', $game.data.id, 'actions'];\n      method = 'POST';\n    }\n    const url = createUrl(apiProtocol, apiHost, ...path);\n    const formData = new FormData(document.getElementById(`${action.id || 'new'}-action-form`));\n    const res = await postFormData(url, formData, method);\n\n    if (!res.ok) {\n      const t = await res.text();\n      error = JSON.parse(t);\n      savingStatus.set('failed');\n    } else {\n      savingStatus.set('saved');\n      error = null;\n      resetFormDisplay();\n      displaySavedBanner();\n\n      /* Dispatch new/updated action to Collection's list */\n      const updatedAction = await res.json();\n      dispatch('updateCollection', {\n        action: updatedAction.data,\n        included: updatedAction.included,\n        deprecatedIncludedIds:\n          updatedAction.included.map((o) => `${o.type}#${o.id}`)\n            .concat([`action#${updatedAction.data.id}`]),\n      });\n    }\n  }\n\n  async function destroyAction() {\n    savingStatus.set('saving');\n    const path = ['users', userId, 'games', $game.data.id, 'actions', action.id];\n    const url = createUrl(apiProtocol, apiHost, ...path);\n    const res = await postFormData(url, {}, 'DELETE');\n\n    if (res.status !== 204) {\n      const t = await res.text();\n      error = JSON.parse(t);\n      savingStatus.set('failed');\n    } else {\n      savingStatus.set('saved');\n\n      /* Update actions list */\n      dispatch('removeCollectionMember', {\n        action: {\n          id: action.id,\n        },\n      });\n    }\n  }\n\n  /* Reload the original Action Data if user hits the Cancel button */\n  async function resetAction() {\n    let path, method;\n    path = ['users', userId, 'games', $game.data.id, 'actions', action.id];\n\n    const url = createUrl(apiProtocol, apiHost, ...path);\n    const res = await fetchData(url);\n\n    if (res.ok) {\n      const updatedAction = await res.json();\n      dispatch('updateCollection', {\n        action: updatedAction.data,\n        included: [],\n        deprecatedIncludedIds: [`action#${updatedAction.data.id}`],\n      });\n    }\n    resetFormDisplay();\n  }\n\n  function removeTag(tag) {\n    action = {\n      ...action,\n      attributes: {\n        ...action.attributes,\n        tags: action.attributes.tags.filter((t) => t !== tag),\n      },\n    };\n  }\n\n  function addTag(evt) {\n    const tag = evt.target.parentElement.querySelector('input.new-tag').value;\n    if (tag.length && !action.attributes.tags.includes(tag)) {\n      action = {\n        ...action,\n        attributes: {\n          ...action.attributes,\n          tags: [...action.attributes.tags, tag],\n        },\n      };\n    }\n  }\n\n  function valueTypePrettify(val) {\n    let result = 'Unknown';\n\n    switch(val) {\n      case 'boolean':\n        result = 'Boolean (Pass | Fail)';\n        break;\n      case 'int':\n        result = 'Integer';\n        break;\n      case 'float':\n        result = 'Float';\n        break;\n      case 'string':\n        result = 'String';\n    }\n    return result;\n  }\n\n  function teamIdPrettify(val) {\n    let result = 'Unknown';\n\n    switch(val) {\n      case false:\n        result = 'No, optional';\n        break;\n      case true:\n        result = 'Yes, required';\n    }\n    return result;\n  }\n\n  function toggleFormDisplay() {\n    displayEditForm = !displayEditForm;\n  }\n\n  function resetFormDisplay() {\n    displayEditForm = false;\n  }\n\n  function toggleSection(key, value) {\n    isExpandedSection[key] = value;\n  }\n\n  function displaySavedBanner() {\n    displaySavedStatus = true;\n    displaySavedStatusTimeout = setTimeout(() => {\n      displaySavedStatus = false;\n    }, 1000);\n  }\n\n  function flushError() {\n    error = null;\n  }\n\n  onDestroy(() => {\n    clearTimeout(displaySavedStatusTimeout);\n  });\n\n  // TODO: replace with conditional chaining support:\n  // https://github.com/sveltejs/svelte/commit/2450dd1ff08491739f124bcdf5131a2e7af52bcb\n  // not released on svelte at this time of writing.\n  $: relation = action.relationships &&\n             action.relationships.relation.data &&\n             $game.included.find((e) => (\n    e.id === action.relationships.relation.data.id &&\n    e.type === action.relationships.relation.data.type\n  ));\n</script>\n\n<div class='item-box'>\n\n  <!-- Show Action -->\n  <div class:is-hidden={displayEditForm || !action.id}>\n    <div class=\"columns is-mobile\">\n      <div class=\"column\">\n        <h1 class=\"title is-4 has-vcentered-text item-name\">\n          <svg class=\"twemoji\">\n            <use href=\"../images/twemoji-sprite.svg#high_voltage_sign\" />\n          </svg>\n          <span class:is-hidden={displayEditForm}>\n            {action.attributes.name}\n          </span>\n          <svg class=\"fa item-edit fill-primary no-hover\" class:is-hidden={displayEditForm}\n            on:click={toggleFormDisplay}>\n            <use href=\"../images/fontawesome-sprite.svg#regular-edit\" />\n          </svg>\n        </h1>\n      </div>\n    </div>\n\n  {#if displaySavedStatus}\n    <div class=\"columns\" out:fade=\"{{delay: 2000, duration: 200}}\">\n      <div class=\"column is-12 saved-collection\">\n        <svg class=\"fa saved\">\n          <use href=\"../images/fontawesome-sprite.svg#solid-check-circle\" />\n        </svg>\n        Updated !\n      </div>\n    </div>\n  {/if}\n\n    <table class=\"table\">\n      <tbody>\n        <tr>\n          <td class=\"right\">\n            Score Type :\n          </td>\n          <td class=\"is-value\">\n            {valueTypePrettify(action.attributes.actionType)}\n          </td>\n        </tr>\n        <tr>\n          <td class=\"right\">\n            Team Id field :\n          </td>\n          <td class=\"is-value\">\n            {teamIdPrettify(action.attributes.team_required)}\n          </td>\n        </tr>\n        <tr>\n          <td class=\"right\">\n            Tags :\n          </td>\n          <td class=\"is-value\">\n            {#if !action.attributes.tags.length}\n              --\n            {:else}\n              <div class=\"tags\">\n                {#each action.attributes.tags as tag}\n                  <span class=\"tag is-link\">{tag}</span>\n                {/each}\n              </div>\n            {/if}\n          </td>\n        </tr>\n        <tr>\n          <td>\n          </td>\n          <td>\n            <p class=\"help\">\n              Need help? See \n              <a href=\"https://doc/place2be.io/actions\" target=\"_blank\">\n                <span>Doc</span>\n                <svg class=\"fa fill-primary no-hover\">\n                  <use href=\"../images/fontawesome-sprite.svg#regular-external-link-square\" />\n                </svg>\n              </a>\n            </p>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <h1 class=\"title is-5 byproduct-title\">\n      <svg class=\"chevron\" on:click={() => toggleSection('conditions', true)}\n        class:is-hidden={isExpandedSection.conditions}>\n        <use href=\"../images/fontawesome-sprite.svg#solid-chevron-double-right\" />\n      </svg>\n      <svg class=\"chevron\" on:click={() => toggleSection('conditions', false)}\n        class:is-hidden={!isExpandedSection.conditions}>\n        <use href=\"../images/fontawesome-sprite.svg#solid-chevron-double-down\" />\n      </svg>\n      <svg class=\"twemoji\">\n        <use href=\"../images/twemoji-sprite.svg#twisted_rightwards_arrows\" />\n      </svg>\n      Conditions\n    </h1>\n    {#if isExpandedSection.conditions}\n      {#if relation !== null}\n       <Relation\n        {relation}\n        formPrefix={undefined} />\n      {:else}\n        <p class=\"no-conditions\">\n          No conditions yet\n        </p>\n      {/if}\n    {/if}\n  </div>\n\n  <!-- Edit Action -->\n  <div class:is-hidden={!displayEditForm && action.id}>\n    <form id=\"{action.id || 'new'}-action-form\"\n      on:submit|preventDefault={saveAction}>\n\n      <div class=\"notification is-danger\" class:is-hidden={!error} >\n        <button class=\"delete\" on:click|preventDefault={() => flushError()} ></button>\n        <h1 class='title is-5'>\n          Unable to Update Action :\n        </h1>\n        <ul>\n          {#if error}\n            {#each Object.entries(error) as [ key, ar ]}\n              <li>{key} : {ar}</li>\n            {/each}\n          {/if}\n        </ul>\n      </div>\n\n      <h1 class=\"title is-5 byproduct-title\">\n        <svg class=\"twemoji\">\n          <use href=\"../images/twemoji-sprite.svg#card_file_box\" />\n        </svg>\n        Properties :\n      </h1>\n\n      <div class=\"field is-horizontal\">\n        <div class=\"field-label is-normal\">\n          <label class=\"label\">Name :</label>\n        </div>\n        <div class=\"field-body\">\n          <div class=\"field\">\n            <input class=\"input reasonable-width\" type=\"text\" name=\"act[name]\"\n              bind:value={action.attributes.name} placeholder=\"Action name\">\n          </div>\n        </div>\n      </div>\n\n      <div class=\"field is-horizontal\">\n        <div class=\"field-label is-normal\">\n          <label class=\"label\">Score Type :</label>\n        </div>\n        <div class=\"field-body\">\n          <div class=\"field\">\n            <div class=\"select\">\n              <select name=\"act[action_type]\" bind:value={action.attributes.actionType}>\n                <option value='boolean'>Boolean (Pass | Fail)</option>\n                <option value='int'>Integer</option>\n                <option value='float'>Float</option>\n                <option value='string'>String</option>\n              </select>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"field is-horizontal\">\n        <div class=\"field-label is-normal\">\n          <label class=\"label\">Team Id field :</label>\n        </div>\n        <div class=\"field-body\">\n          <div class=\"field\">\n            <div class=\"select\">\n              <select name=\"act[team_required]\" bind:value={action.attributes.team_required}>\n                <option value=\"false\">No, optional</option>\n                <option value=\"true\">Yes, required</option>\n              </select>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"field is-horizontal\">\n        <div class=\"field-label is-normal\">\n          <label class=\"label\">Tags :</label>\n        </div>\n        <div class=\"field-body\">\n          <div class=\"field\">\n            <div class=\"field is-grouped is-grouped-multiline has-vcentered-content\">\n              {#each action.attributes.tags as tag, i (i)}\n                <div class=\"control\">\n                  <input name=\"act[tags][]\" class=\"input\" type=\"hidden\"\n                    value={tag}>\n                  <div class=\"tags has-addons\">\n                    <span class=\"tag is-info\">\n                      {tag}\n                    </span>\n                    <span class=\"tag is-delete\" on:click={() => removeTag(tag)}>\n                    </span>\n                  </div>\n                </div>\n              {/each}\n                <input class=\"input is-small new-tag\" type=\"text\"\n                  placeholder=\"New tag\">\n                <button class=\"button is-primary is-outlined is-small\"\n                  on:click|preventDefault={addTag}>\n                  Add\n                </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <h1 class=\"title is-5 byproduct-title\">\n        <svg class=\"twemoji\">\n          <use href=\"../images/twemoji-sprite.svg#twisted_rightwards_arrows\" />\n        </svg>\n        Conditions\n      </h1>\n      <div class=\"content\">\n        <ul class=\"help\">\n          <li>\n            An Action can only be triggered multiple times per Player.\n          </li>\n          <li>\n            Set below the conditions Players need to succeed triggering the Action.\n          </li>\n          <li>\n            Depending on what you configure below, not ALL the conditions have to be met\n            for the Achievement to be granted.<br />\n            At least one condition has to be met and maximum all the conditions.\n          </li>\n        </ul>\n      </div>\n\n      {#if action.id && relation !== null}\n        <Relation \n          {relation}\n          formPrefix=\"act[relation_attributes]\"\n          on:message={updateRelation}/>\n      {:else}\n        <Relation formPrefix=\"act[relation_attributes]\"\n            on:message={updateRelation}/>\n      {/if}\n\n      <div class=\"columns is-vcentered mt-3\">\n        <div class=\"column is-narrow\">\n          <p class=\"help\">\n            Need help? See \n            <a href=\"https://doc/place2be.io/actions\" target=\"_blank\">\n              <span>Doc</span>\n              <svg class=\"fa fill-primary no-hover\">\n                <use href=\"../images/fontawesome-sprite.svg#regular-external-link-square\" />\n              </svg>\n            </a>\n          </p>\n        </div>\n        <div class=\"column\">\n          <div class=\"buttons\">\n            <button class=\"button is-primary\">\n            {#if !action.id}\n              Create\n            {:else}\n              Update\n            {/if}\n            </button>\n            {#if action.id}\n              <button class=\"button is-primary is-light\"\n                on:click|preventDefault={resetAction}>\n                Cancel\n              </button>\n              <button class=\"button is-danger\"\n                on:click|preventDefault={destroyAction}>\n                Delete\n              </button>\n            {/if}\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n\n\n<style lang='scss'>\n  input.new-tag {\n    max-width: 200px;\n    margin-right: 1em;\n  }\n  td {\n    vertical-align: middle;\n  }\n  td.right {\n    text-align: right;\n  }\n  td.is-value {\n    color: gray;\n    font-style: italic;\n  }\n  button.is-danger {\n    color: #cb2431 !important;\n    background: white !important;\n    border: 1px solid #cb2431 !important;\n  }\n</style>","<script>\n  import { getContext, createEventDispatcher, onDestroy } from 'svelte';\n  import { fade } from 'svelte/transition';\n  import { createUrl } from '../../../../javascripts/utils/helpers';\n  import { fetchData, postFormData } from '../../../../javascripts/utils/helpers';\n  import Relation from '../SharedComps/Relation/Relation.svelte';\n  import AssetsIndex from '../SharedComps/Assets/AssetsIndex.svelte';\n  import AssetsForm from '../SharedComps/Assets/AssetsForm.svelte';\n  import { game } from '../../../../javascripts/stores/gameStore';\n  import { savingStatus } from '../../../../javascripts/stores/savingStore';\n\n  export let achievement = {\n    attributes: {\n      assets: [\n        {\n          key: '',\n          tuples: [\n            {\n              namespaces: $game.data.attributes.namespaces,\n              value: '',\n            },\n          ],\n        },\n      ],\n    },\n  };\n  let relation;\n  let isExpandedSection = {\n    conditions: false,\n    rewards: false,\n    assets: false,\n  }\n  let displayEditForm = false;\n  let displaySavedStatus = false;\n  let displaySavedStatusTimeout;\n  let error = null;\n\n  const dispatch = createEventDispatcher();\n  const apiProtocol = getContext('apiProtocol');\n  const apiHost = getContext('apiHost');\n  const userId = getContext('userId');\n\n  function updateRelation(event) {\n    relation = event.detail.relation;\n  }\n\n  async function saveAchievement() {\n    savingStatus.set('saving');\n    let path, method;\n\n    if (achievement.id) {\n      path = ['users', userId, 'games', $game.data.id, 'achievements', achievement.id];\n      method = 'PUT';\n    } else {\n      path = ['users', userId, 'games', $game.data.id, 'achievements'];\n      method = 'POST';\n    }\n    const url = createUrl(apiProtocol, apiHost, ...path);\n    const formData = new FormData(document.getElementById(`${achievement.id || 'new'}-achievement-form`));\n    const res = await postFormData(url, formData, method);\n\n    if (!res.ok) {\n      const t = await res.text();\n      error = JSON.parse(t);\n      savingStatus.set('failed');\n    } else {\n      savingStatus.set('saved');\n      resetFormDisplay();\n      displaySavedBanner();\n\n      /* Dispatch new/updated achievement to Collection's list */\n      const updatedAchievement = await res.json();\n      dispatch('updateCollection', {\n        achievement: updatedAchievement.data,\n        included: updatedAchievement.included,\n        deprecatedIncludedIds:\n          updatedAchievement.included.map((o) => `${o.type}#${o.id}`)\n            .concat([`achievement#${updatedAchievement.data.id}`]),\n      });\n    }\n  }\n\n  async function destroyAchievement() {\n    savingStatus.set('saving');\n    const path = ['users', userId, 'games', $game.data.id, 'achievements', achievement.id];\n    const url = createUrl(apiProtocol, apiHost, ...path);\n    const res = await postFormData(url, {}, 'DELETE');\n\n    if (res.status !== 204) {\n      const t = await res.text();\n      error = JSON.parse(t);\n      savingStatus.set('failed');\n    } else {\n      savingStatus.set('saved');\n      error = null;\n\n      /* Update actions list */\n      dispatch('removeCollectionMember', {\n        achievement: {\n          id: achievement.id,\n        },\n      });\n    }\n  }\n\n  async function resetAchievement() {\n    let path, method;\n    path = ['users', userId, 'games', $game.data.id, 'achievements', achievement.id];\n\n    const url = createUrl(apiProtocol, apiHost, ...path);\n    const res = await fetchData(url);\n\n    if (res.ok) {\n      const updatedAchievement = await res.json();\n      dispatch('updateCollection', {\n        achievement: updatedAchievement.data,\n        included: [],\n        deprecatedIncludedIds: [`achievement#${updatedAchievement.data.id}`],\n      });\n    }\n    resetFormDisplay();\n  }\n\n  function resetFormDisplay() {\n    displayEditForm = false;\n  }\n\n  function toggleFormDisplay() {\n    displayEditForm = !displayEditForm;\n  }\n\n  function toggleSection(key, value) {\n    isExpandedSection[key] = value;\n  }\n\n  function displaySavedBanner() {\n    displaySavedStatus = true;\n    displaySavedStatusTimeout = setTimeout(() => {\n      displaySavedStatus = false;\n    }, 1000);\n  }\n\n  function flushError() {\n    error = null;\n  }\n\n  onDestroy(() => {\n    clearTimeout(displaySavedStatusTimeout);\n  });\n\n  // TODO: replace with conditional chaining support:\n  // https://github.com/sveltejs/svelte/commit/2450dd1ff08491739f124bcdf5131a2e7af52bcb\n  // not released on svelte at this time of writing.\n  $: relation = achievement.relationships &&\n             achievement.relationships.relation.data &&\n             $game.included.find((e) => (\n    e.id === achievement.relationships.relation.data.id &&\n    e.type === achievement.relationships.relation.data.type\n  ));\n</script>\n\n\n\n<div class='item-box'>\n  {#if !displayEditForm && achievement.id}\n    <div class=\"columns is-mobile\">\n      <div class=\"column\">\n        <h1 class=\"title is-4 has-vcentered-text item-name\">\n          <svg class=\"twemoji\">\n            <use href=\"../images/twemoji-sprite.svg#trophy\" />\n          </svg>\n          <span class:is-hidden={displayEditForm}>\n            {achievement.attributes.name}\n          </span>\n          <svg class=\"fa item-edit fill-primary no-hover\" class:is-hidden={displayEditForm}\n            on:click={toggleFormDisplay}>\n            <use href=\"../images/fontawesome-sprite.svg#regular-edit\" />\n          </svg>\n        </h1>\n      </div>\n    </div>\n\n    {#if displaySavedStatus}\n      <div class=\"columns\" out:fade=\"{{delay: 2000, duration: 200}}\">\n        <div class=\"column is-12 saved-collection\">\n          <svg class=\"fa saved\">\n            <use href=\"../images/fontawesome-sprite.svg#solid-check-circle\" />\n          </svg>\n          Updated !\n        </div>\n      </div>\n    {/if}\n\n\n    <h1 class=\"title is-5 byproduct-title\"\n      class:is-disabled={!relation}>\n      <svg class=\"chevron\" on:click={() => toggleSection('conditions', true)}\n        class:is-hidden={isExpandedSection.conditions}>\n        <use href=\"../images/fontawesome-sprite.svg#solid-chevron-double-right\" />\n      </svg>\n      <svg class=\"chevron\" on:click={() => toggleSection('conditions', false)}\n        class:is-hidden={!isExpandedSection.conditions}>\n        <use href=\"../images/fontawesome-sprite.svg#solid-chevron-double-down\" />\n      </svg>\n      <svg class=\"twemoji\">\n        <use href=\"../images/twemoji-sprite.svg#twisted_rightwards_arrows\" />\n      </svg>\n      Conditions\n      {#if relation}\n        <span class=\"quantity\">({relation.relationships.conditions.data.length})</span>\n      {/if}\n    </h1>\n    {#if isExpandedSection.conditions}\n      {#if relation !== null}\n       <Relation\n        {relation}\n        formPrefix={undefined} />\n      {:else}\n        <p class=\"no-conditions\">\n          No conditions yet\n        </p>\n      {/if}\n    {/if}\n\n\n    <h1 class=\"title is-5 byproduct-title\">\n      <svg class=\"chevron\" on:click={() => toggleSection('rewards', true)}\n        class:is-hidden={isExpandedSection.rewards}>\n        <use href=\"../images/fontawesome-sprite.svg#solid-chevron-double-right\" />\n      </svg>\n      <svg class=\"chevron\" on:click={() => toggleSection('rewards', false)}\n        class:is-hidden={!isExpandedSection.rewards}>\n        <use href=\"../images/fontawesome-sprite.svg#solid-chevron-double-down\" />\n      </svg>\n      <svg class=\"twemoji\">\n        <use href=\"../images/twemoji-sprite.svg#wrapped_present\" />\n      </svg>\n      Rewards <span class=\"note\">(optional)</span>\n    </h1>\n    <div class:is-hidden={!isExpandedSection.rewards}>\n      <p>TODO</p>\n    </div>\n\n\n\n\n    <h1 class=\"title is-5 byproduct-title\"\n      class:is-disabled={!achievement.attributes.assets.length}>\n      <svg class=\"chevron\" on:click={() => toggleSection('assets', true)}\n        class:is-hidden={isExpandedSection.assets}>\n        <use href=\"../images/fontawesome-sprite.svg#solid-chevron-double-right\" />\n      </svg>\n      <svg class=\"chevron\" on:click={() => toggleSection('assets', false)}\n        class:is-hidden={!isExpandedSection.assets}>\n        <use href=\"../images/fontawesome-sprite.svg#solid-chevron-double-down\" />\n      </svg>\n      <svg class=\"twemoji\">\n        <use href=\"../images/twemoji-sprite.svg#package\" />\n      </svg>\n      Assets\n      {#if achievement.attributes.assets.length}\n        <span class=\"quantity\">({achievement.attributes.assets.length})</span>\n      {/if}\n    </h1>\n\n    {#if isExpandedSection.assets}\n      {#if achievement.attributes.assets.length}\n        <AssetsIndex assets={achievement.attributes.assets} />\n      {:else}\n        <p class=\"no-conditions\">\n          No assets yet\n        </p>\n      {/if}\n    {/if}\n  {/if}\n\n\n\n\n  <!-- Edit Achievement -->\n  {#if displayEditForm || !achievement.id}\n    <form id=\"{achievement.id || 'new'}-achievement-form\"\n        on:submit|preventDefault={saveAchievement}>\n\n      <div class=\"notification is-danger\" class:is-hidden={!error} >\n        <button class=\"delete\" on:click|preventDefault={() => flushError()} ></button>\n        <h1 class='title is-5'>\n          Unable to Update Achievement :\n        </h1>\n        <ul>\n          {#if error}\n            {#each Object.entries(error) as [ key, ar ]}\n              <li>{key} : {ar}</li>\n            {/each}\n          {/if}\n        </ul>\n      </div>\n\n\n      <h1 class=\"title is-5 byproduct-title\">\n        <svg class=\"twemoji\">\n          <use href=\"../images/twemoji-sprite.svg#card_file_box\" />\n        </svg>\n        Properties\n      </h1>\n\n      <div class=\"field is-horizontal\">\n        <div class=\"field-label is-normal\">\n          <label class=\"label\">Name :</label>\n        </div>\n        <div class=\"field-body\">\n          <div class=\"field\">\n            <input class=\"input reasonable-width\" type=\"text\" name=\"achievement[name]\"\n              bind:value={achievement.attributes.name} placeholder=\"Achievement name\">\n          </div>\n        </div>\n      </div>\n\n      <h1 class=\"title is-5 byproduct-title\">\n        <svg class=\"twemoji\">\n          <use href=\"../images/twemoji-sprite.svg#twisted_rightwards_arrows\" />\n        </svg>\n        Conditions\n      </h1>\n      <div class=\"content\">\n        <ul class=\"help\">\n          <li>\n            An Achievement can only be unlocked once <em>per Player</em>.\n          </li>\n          <li>\n            Set below the conditions Players need to meet to unlock the Achievement.\n          </li>\n          <li>\n            Depending on what you configure below, not ALL the conditions have to be met\n            for the Achievement to be granted.<br />\n            At least one condition has to be met and maximum all the conditions.\n          </li>\n          <li>\n            Make sure you have at least one condition of \"Action trigger\" type otherwise the\n            Achievement will never be hooked!\n          </li>\n        </ul>\n      </div>\n\n      {#if achievement.id && relation !== null}\n        <Relation \n          {relation}\n          formPrefix=\"achievement[relation_attributes]\"\n          on:message={updateRelation}/>\n      {:else}\n        <Relation formPrefix=\"achievement[relation_attributes]\"\n            on:message={updateRelation}/>\n      {/if}\n\n\n      <h1 class=\"title is-5 byproduct-title\">\n        <svg class=\"twemoji\">\n          <use href=\"../images/twemoji-sprite.svg#wrapped_present\" />\n        </svg>\n        Rewards <span class=\"note\">(optional)</span>\n      </h1>\n      <div>\n        <p>TODO</p>\n      </div>\n\n\n\n      <h1 class=\"title is-5 byproduct-title\">\n        <svg class=\"twemoji\">\n          <use href=\"../images/twemoji-sprite.svg#package\" />\n        </svg>\n        Assets\n        <span class=\"note\">(optional)</span>\n      </h1>\n      <div class=\"content\">\n        <ul class=\"help\">\n          <li>\n            Assets are key-value entries you can associate with an Achievement.\n          </li>\n          <li>\n            Everytime an Achievement will be involved, its associated assets will be returned as well.\n          </li>\n          <li>\n            You can have multiple assets per Achievement, carrying any information you want.\n          </li>\n          <li>\n            See assets\n            <a href=\"https://doc/place2be.io/assets\" target=\"_blank\">\n              <span>Doc</span>\n              <svg class=\"fa fill-primary no-hover\">\n                <use href=\"../images/fontawesome-sprite.svg#regular-external-link-square\" />\n              </svg>\n            </a>\n            for common use cases and examples.\n          </li>\n        </ul>\n      </div>\n\n      <AssetsForm assets={achievement.attributes.assets} formPrefix=\"achievement\"/>\n\n      <div class=\"columns is-vcentered\">\n        <div class=\"column is-narrow\">\n          <p class=\"help\">\n            Need help? See \n            <a href=\"https://doc/place2be.io/achievements\" target=\"_blank\">\n              <span>Doc</span>\n              <svg class=\"fa fill-primary no-hover\">\n                <use href=\"../images/fontawesome-sprite.svg#regular-external-link-square\" />\n              </svg>\n            </a>\n          </p>\n        </div>\n        <div class=\"column\">\n          <div class=\"buttons\">\n            <button class=\"button is-primary\">\n            {#if !achievement.id}\n              Create\n            {:else}\n              Update\n            {/if}\n            </button>\n            {#if achievement.id}\n              <button class=\"button is-primary is-light\"\n                on:click|preventDefault={resetAchievement}>\n                Cancel\n              </button>\n              <button class=\"button is-danger\"\n                on:click|preventDefault={destroyAchievement}>\n                Delete\n              </button>\n            {/if}\n          </div>\n        </div>\n      </div>\n    </form>\n  {/if}\n</div>\n\n<style lang=\"scss\">\n  button.is-danger {\n    color: #cb2431 !important;\n    background: white !important;\n    border: 1px solid #cb2431 !important;\n  }\n</style>","<script>\n  import Resource from './Resource/Resource.svelte';\n  import Action from './Action/Action.svelte';\n  import Achievement from './Achievement/Achievement.svelte';\n  import { fetchData } from '../../../javascripts/utils/helpers';\n  import { game } from '../../../javascripts/stores/gameStore';\n\n  export let attributes;\n  export let collection;\n\n  const collectionsComponents = {\n    actions: Action,\n    achievements: Achievement,\n    resources: Resource,\n  };\n\n  function updateCollection(event) {\n    game.update((g) => ({\n      ...g,\n      included: [\n        ...g.included.filter((e) => (\n          !event.detail.deprecatedIncludedIds.includes(`${e.type}#${e.id}`)\n        )),\n        event.detail[attributes.name.singular],\n        ...event.detail.included,\n      ],\n    }));\n  }\n\n  function removeCollectionMember(event) {\n    game.update((g) => ({\n      ...g,\n      included: [\n        ...g.included.filter((e) => (\n          !(e.type === attributes.name.singular &&\n              e.id === event.detail[attributes.name.singular].id)\n        )),\n      ],\n    }));\n  }\n</script>\n\n{#if collection.length}\n  {#each collection as elem (elem.id)}\n    <svelte:component this={collectionsComponents[attributes.name.plural]}\n      { ...{ [attributes.name.singular]: elem} }\n      on:updateCollection={updateCollection}\n      on:removeCollectionMember={removeCollectionMember}/>\n  {/each}\n{:else}\n  <p>You don't have {attributes.model.plural} yet! Start by creating one below ↓</p>\n{/if}\n\n<hr>\n<h1 class=\"title is-4\">\n  Create new {attributes.model.singular} :\n</h1>\n<svelte:component this={collectionsComponents[attributes.name.plural]}\n  on:updateCollection={updateCollection}\n  on:removeCollectionMember={removeCollectionMember}/>\n","<script>\n  import { getContext, createEventDispatcher } from 'svelte';\n  import { createUrl } from '../../../javascripts/utils/helpers';\n  import { postFormData } from '../../../javascripts/utils/helpers';\n  import { game } from '../../../javascripts/stores/gameStore';\n  import { savingStatus } from '../../../javascripts/stores/savingStore';\n  let error = null;\n\n  const dispatch = createEventDispatcher();\n  const apiProtocol = getContext('apiProtocol');\n  const apiHost = getContext('apiHost');\n  const userId = getContext('userId');\n\n  async function handleSubmit(path, formId) {\n    const url = createUrl(apiProtocol, apiHost, ...path);\n    const formData = new FormData(document.getElementById(formId));\n\n    savingStatus.set('saving');\n    const res = await postFormData(url, formData, 'PUT');\n\n    if (!res.ok) {\n      const t = await res.text();\n      error = JSON.parse(t);\n      savingStatus.set('failed');\n    } else {\n      savingStatus.set('saved');\n\n      /* Update Game Store with new content */\n      const newGame = await res.json();\n      game.set(newGame);\n\n      /* Update Dashboard's game List */\n      dispatch('message', {\n        gameUrl: newGame.data.links.self,\n        updateGameList: true,\n      });\n    }\n  }\n\n  function handleUpdate() {\n    handleSubmit(['users', userId, 'games', $game.data.id], 'settings-form');\n  }\n\n  function handleDanger() {\n    const conf = confirm(\"Are you sure?\");\n    if (!conf)\n      return;\n\n    handleSubmit(['users', userId, 'games', $game.data.id], 'danger-form');\n  }\n\n  async function handleDestroy() {\n    const conf = confirm(\"Are you sure? \\\n    Once you delete a game, there is no going back. Please be certain!\");\n    if (!conf)\n      return;\n\n    const path = ['users', userId, 'games', $game.data.id];\n    const url = createUrl(apiProtocol, apiHost, ...path);\n    const res = await postFormData(url, {}, 'DELETE');\n\n    if (!res.ok) {\n      const t = await res.text();\n      error = JSON.parse(t);\n    } else {\n      /* Update Dashboard's game List */\n      dispatch('message', {\n        gameUrl: undefined,\n        updateGameList: true,\n      });\n    }\n  }\n\n  function addNamespace() {\n    const ns = document.getElementById('new-namespace');\n    if (!$game.data.attributes.namespaces.includes(ns.value)) {\n      game.update(g => ({\n        ...g,\n        data: {\n          ...g.data,\n          attributes: {\n            ...g.data.attributes,\n            namespaces: [...g.data.attributes.namespaces, ns.value],\n          },\n        },\n      }));\n    }\n    ns.value = '';\n  }\n\n  function removeNamespace(namespace) {\n    game.update(g => ({\n      ...g,\n      data: {\n        ...g.data,\n        attributes: {\n          ...g.data.attributes,\n          namespaces: g.data.attributes.namespaces.filter((e) => e !== namespace),\n        },\n      },\n    }));\n  }\n\n  function flushError() {\n    error = null;\n  }\n</script>\n\n\n<form id=\"settings-form\" on:submit|preventDefault={handleUpdate}>\n  <div class=\"notification is-danger\" class:is-hidden={!error} >\n    <button class=\"delete\" on:click|preventDefault={() => flushError()} ></button>\n    <h1 class='title is-5'>\n      Unable to Update Game :\n    </h1>\n    <ul>\n      {#if error}\n        {#each Object.entries(error) as [ key, ar ]}\n          <li>{key} : {ar}</li>\n        {/each}\n      {/if}\n    </ul>\n  </div>\n\n  <div class=\"field\">\n    <label class=\"label\">\n      Game Name\n    </label>\n    <div class=\"control\">\n      <input name=\"game[name]\" class=\"input reasonable-width\" type=\"text\"\n        value={$game.data.attributes.name}>\n    </div>\n  </div>\n\n  <div class=\"field\">\n    <label class=\"label\">\n      Description\n    </label>\n    <div class=\"control\">\n      <input name=\"game[description]\" class=\"input\" type=\"text\"\n        value={$game.data.attributes.description}>\n    </div>\n    <p class=\"help\">Game and description won't be visible to your players.</p>\n  </div>\n\n  <div class=\"field\">\n    <label class=\"label\">\n      Namespaces\n    </label>\n    <div class=\"field is-grouped is-grouped-multiline has-vcentered-content\">\n      {#each $game.data.attributes.namespaces as namespace, i (i)}\n        <div class=\"control\">\n          <input name=\"game[namespaces][]\" class=\"input\" type=\"hidden\"\n            value={namespace}>\n          <div class=\"tags has-addons\">\n            <span class=\"tag is-info\">\n              {namespace}\n            </span>\n            {#if namespace !== 'default'}\n              <span class=\"tag is-delete\" on:click={removeNamespace(namespace)}>\n              </span>\n            {/if}\n          </div>\n        </div>\n      {/each}\n        <input id=\"new-namespace\" class=\"input is-small\" type=\"text\"\n          placeholder=\"New\">\n        <button class=\"button is-primary is-outlined is-small\"\n          on:click|preventDefault={addNamespace}>\n          Add\n        </button>\n    </div>\n  </div>\n\n  <button class=\"button is-link save\">Update Settings</button>\n</form>\n\n<hr>\n\n<h1 class=\"title is-4\">Danger Zone :</h1>\n<form id=\"danger-form\" on:submit|preventDefault={handleDanger}>\n  <div class=\"field\">\n    <input name=\"game[archived]\" class=\"input\" type=\"hidden\"\n        value={!$game.data.attributes['archived']}>\n    <button class=\"button is-danger is-outlined\"\n      class:is-hidden={$game.data.attributes.archived}>Archive this Game</button>\n    <button class=\"button is-danger is-outlined\"\n      class:is-hidden={!$game.data.attributes.archived}>Reactivate this Game</button>\n    <p class=\"help\">Once you archive a game, no player will be able to access it anymore. Please be certain!</p>\n  </div>\n</form>\n\n<div class=\"field\">\n  <button class=\"button is-danger is-outlined\" on:click|preventDefault={handleDestroy}>\n    Delete this Game\n  </button>\n  <p class=\"help\">Once you delete a game, there is no going back. Please be certain!</p>\n</div>\n\n<style lang=scss>\n  button.is-danger {\n    color: #cb2431 !important;\n    background: white !important;\n    border: 1px solid #cb2431 !important;\n  }\n  button.save {\n    margin-top: 2em;\n  }\n  input#new-namespace {\n    max-width: 200px;\n    margin-right: 1em;\n  }\n  .is-delete {\n    cursor: pointer;\n  }\n  .control:not(:last-child) {\n    margin-bottom: 0.75rem;\n    margin-top: 0.75rem;\n    margin-right: 0.75rem;\n  }\n</style>","<script>\n  import { fade } from 'svelte/transition';\n  import { fetchData } from '../../javascripts/utils/helpers';\n  import { game } from '../../javascripts/stores/gameStore';\n  import { savingStatus, lastSaveDate } from '../../javascripts/stores/savingStore';\n  import GameTabs from './GameTabs.svelte';\n  import Overview from './Tabs/Overview.svelte';\n  import Collection from './Tabs/Collection.svelte';\n  import Stats from './Tabs/Stats.svelte';\n  import Dev from './Tabs/Dev.svelte';\n  import Settings from './Tabs/Settings.svelte';\n\n  export let gameUrl;\n  let error = null;\n  let selectedTab = 'achievements';\n  let collection;\n  const tabs = {\n    overview: Overview,\n    actions: Collection,\n    achievements: Collection,\n    resources: Collection,\n    stats: Stats,\n    dev: Dev,\n    settings: Settings,\n  }\n  const attributes = {\n    actions: {\n      name: {\n        singular: 'action',\n        plural: 'actions',\n      },\n      model: {\n        singular: 'Action',\n        plural: 'Actions',\n      }\n    },\n    achievements: {\n      name: {\n        singular: 'achievement',\n        plural: 'achievements',\n      },\n      model: {\n        singular: 'Achievement',\n        plural: 'Achievements',\n      }\n    },\n    resources: {\n      name: {\n        singular: 'resource',\n        plural: 'resources',\n      },\n      model: {\n        singular: 'Resource',\n        plural: 'Resources',\n      }\n    },\n  };\n\n  async function getGame(url) {\n    const res = await fetchData(url);\n    if (res.ok) {\n      const resJson = await res.json();\n      game.set(resJson);\n    } else {\n      error = 'Could not find the game you are looking for...';\n    }\n  }\n\n  function handleNewSelectedTab(event) {\n    selectedTab = event.detail.selectedTab;\n  }\n\n  // Update game Store when gameUrl is updated\n  $: getGame(gameUrl);\n  $: collection = $game && attributes[selectedTab] ?\n                  $game.included.filter((e) => e.type === attributes[selectedTab].name.singular)\n                                .sort((a, b) => parseInt(a.id) - parseInt(b.id)) :\n                  [];\n</script>\n\n{#if !error}\n  {#if !$game}\n    <h1 class=\"title is-4 has-vcentered-content\">\n      Loading Game...\n    </h1>\n  {:else}\n    <h1 class=\"title is-4 has-vcentered-content\">\n      <span id=\"saving-status\">\n        <abbr title=\"Last save : {$lastSaveDate.toLocaleString()}\">\n          <svg class=\"fa saved\" class:is-hidden={$savingStatus != 'saved'}\n            transition:fade=\"{{delay: 250, duration: 300}}\">\n            <use href=\"../images/fontawesome-sprite.svg#solid-check-circle\" />\n          </svg>\n          <svg class=\"fa saving rotating\" class:is-hidden={$savingStatus != 'saving'}\n            transition:fade=\"{{delay: 250, duration: 300}}\">\n            <use href=\"../images/fontawesome-sprite.svg#solid-spinner-third\" />\n          </svg>\n          <svg class=\"fa failed\" class:is-hidden={$savingStatus != 'failed'}\n            transition:fade=\"{{delay: 250, duration: 300}}\">\n            <use href=\"../images/fontawesome-sprite.svg#solid-times-circle\" />\n          </svg>\n        </abbr>\n      </span>\n      {$game.data.attributes.name}\n    </h1>\n    <h1 id=\"game-description\" class=\"subtitle is-6\">{$game.data.attributes.description}</h1>\n\n    <GameTabs {selectedTab} on:message={handleNewSelectedTab} />\n    <svelte:component this={tabs[selectedTab]}\n      attributes={attributes[selectedTab]}\n      {collection}\n      on:message/>\n  {/if}\n{:else}\n  <div class=\"notification is-warning\" class:is-hidden={!error}>\n    <p>Could not load the game you are looking for...</p>\n  </div>\n{/if}\n\n<style lang=\"scss\">\n  #saving-status {\n    border-bottom-style: none;\n    padding: 0.5em 0;\n    margin-right: 0.5em;\n\n    svg {\n      vertical-align: middle;\n    }\n\n    .saved {\n      fill: #73c90a;\n    }\n    .saving{\n      fill: rgb(177, 177, 177);\n    }\n    .failed{\n      fill: darkred;\n    }\n  }\n\n  #game-description {\n    margin-left: 2.3em;\n  }\n</style>","<script>\n  import { setContext } from 'svelte';\n  import { createUrl, fetchData } from '../../javascripts/utils/helpers';\n  import GameList from './GameList.svelte';\n  import NewGame from './NewGame.svelte';\n  import GameDetails from './GameDetails.svelte';\n  export let apiProtocol;\n  export let apiHost;\n  export let userId = undefined;\n  let gameList;\n  let gameUrl;\n\n  async function getUserGamesList(id) {\n    const url = createUrl(apiProtocol, apiHost, 'users', id, 'games');\n    const res = await fetchData(url);\n    const resJson = await res.json();\n    return resJson.data;\n  };\n\n  async function handleNewGameUrl(event) {\n    if (event.detail.updateGameList) {\n      gameList = await getUserGamesList(userId);\n    }\n    gameUrl = event.detail.gameUrl;\n  }\n\n  $: gameList = getUserGamesList(userId);\n  $: setContext('apiProtocol', apiProtocol);\n  $: setContext('apiHost', apiHost);\n  $: setContext('userId', userId);\n</script>\n\n\n <div class=\"columns\">\n  <div class=\"column is-2\">\n    <GameList {gameList} {gameUrl} on:message={handleNewGameUrl} />\n  </div>\n  <div class=\"column\">\n    <div id=\"feedback\" class=\"box\">\n      <p>\n        Place2Be.io is still at an early stage of development, with a very minimal set of features as we are mainly collecting feedback at this stage.<br />\n        We would\n        <svg class=\"twemoji\">\n          <use href=\"../images/twemoji-sprite.svg#heart\" />\n        </svg>\n        to hear your thoughts on this! <a href=\"/feedback.html\">Give Feedback</a>\n      </p>\n    </div>\n    <div id=\"game-content\" class=\"box\">\n      {#if !gameUrl}\n        <p><span class=\"is-hidden-touch\">←</span><span class=\"is-hidden-desktop\">↑</span> Start by hitting the 'New Game' button !\n          <svg class=\"twemoji\">\n            <use href=\"../images/twemoji-sprite.svg#party_popper\" />\n          </svg>\n        </p>\n      {:else if gameUrl === 'new'}\n        <NewGame on:message={handleNewGameUrl} />\n      {:else}\n        <GameDetails {gameUrl} on:message={handleNewGameUrl} />\n      {/if}\n    </div>\n  </div>\n</div>\n\n<style lang='scss'>\n  div#game-content {\n    max-width:1152px;\n  }\n  div#feedback {\n  max-width: 1152px;\n  margin: 0 0 1em 0;\n  background: #eefde2;\n  padding: 1em;\n  border-radius: 0.2em;\n  border: 2px solid #81e10b;\n\n  .twemoji {\n    vertical-align: middle;\n  }\n}\n</style>","<script>\n  import { onMount } from 'svelte';\n  import { createUrl, getCookie } from '../../javascripts/utils/helpers';\n  import { postFormData } from '../../javascripts/utils/helpers';\n  export let apiProtocol;\n  export let apiHost;\n\n  let authenticated = false;\n\n  onMount(async () => {\n    authenticated = getCookie(document.cookie, 'user_id');\n  });\n\n  async function signout() {\n    const url = createUrl(apiProtocol, apiHost, 'signout');\n    const res = await postFormData(url, undefined);\n\n    /* Redirect to landing page */\n    window.location.replace(createUrl(window.location.protocol,\n      window.location.host, 'index.html'));\n  }\n</script>\n\n<div class=\"buttons\">\n  <a href=\"/credentials.html\" class=\"button is-link is-outlined fill-primary\" class:is-hidden=\"{authenticated}\">\n    <span class=\"icon is-small\">\n      <svg class=\"fa\">\n        <use href=\"../images/fontawesome-sprite.svg#solid-sign-in\" />\n      </svg>\n    </span>\n    <span>\n      Sign In\n    </span>\n  </a>\n  <a href='/settings.html' class=\"button is-link is-outlined fill-primary\"  class:is-hidden=\"{!authenticated}\">\n    <span class=\"icon is-small\">\n      <svg class=\"fa\">\n        <use href=\"../images/fontawesome-sprite.svg#solid-cog\" />\n      </svg>\n    </span>\n    <span>\n      Settings\n    </span>\n  </a>\n  <button id=\"sign-out\" class=\"button is-link fill-secondary\" class:is-hidden=\"{!authenticated}\" on:click={signout}>\n    <span class=\"icon is-small\">\n      <svg class=\"fa\">\n        <use href=\"../images/fontawesome-sprite.svg#solid-sign-out\" />\n      </svg>\n    </span>\n    <span>\n      Sign Out\n    </span>\n  </button>\n  <a href=\"/credentials.html?signup=true\" class=\"button is-link fill-primary\" class:is-hidden=\"{authenticated}\">\n    <span class=\"icon is-small\">\n      <svg class=\"fa fill-secondary\">\n        <use href=\"../images/fontawesome-sprite.svg#solid-sign-in-alt\" />\n      </svg>\n    </span>\n    <span>\n      Sign Up\n    </span>\n  </a>\n</div>\n\n<style lang='scss'>\n</style>","/*\n * Users APP\n */\n\n/* config */\nimport config from '../../../public-config.json';\n\n/* Javascripts */\nimport { getCookie, setNavbarToggle } from '../utils/helpers';\n\n/* Stylesheets */\nimport '../../stylesheets/navbar.scss';\nimport '../../stylesheets/dashboard.scss';\n\n/* Components */\nimport Dashboard from '../../components/Dashboard/Dashboard.svelte';\nimport CredentialsButtons from '../../components/Credentials/CredentialsButtons.svelte';\n\n/* Navbar toggle */\nsetNavbarToggle();\n\nconst app = (async () => {\n  // Figure out: are we asking our own dashboard\n  // or a distinct user's one?\n  const params = new URLSearchParams(window.location.search);\n  const userId = params.has('user_id')\n    ? params.get('user_id')\n    : getCookie(document.cookie, 'user_id');\n\n  // eslint-disable-next-line no-unused-vars\n  const auth = new CredentialsButtons({\n    target: document.getElementById('credentials-buttons'),\n    props: {\n      apiProtocol: config.api.protocol,\n      apiHost: config.api.host,\n    },\n  });\n\n  // eslint-disable-next-line no-unused-vars\n  const dashboard = new Dashboard({\n    target: document.getElementById('main'),\n    props: {\n      apiProtocol: config.api.protocol,\n      apiHost: config.api.host,\n      userId,\n    },\n  });\n})();\n\n\nexport default app;\n"],"names":["createUrl","protocol","host","path","Array","isArray","map","s","replace","join","getCookie","cookies","key","res","split","c","find","k","trim","undefined","fetchData","url","csrf","document","cookie","fetch","method","credentials","headers","Accept","x-csrf-token","postFormData","data","body","capitalizeFirstLetter","str","charAt","toUpperCase","slice","noop","identity","x","assign","tar","src","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","delete","f","size","loop","promise","Promise","fulfill","add","[object Object]","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","createElement","svg_element","createElementNS","text","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","set_input_value","input","select_option","select","option","__value","selected","select_value","selected_option","querySelector","toggle_class","toggle","classList","custom_event","type","detail","e","createEvent","initCustomEvent","active_docs","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","p","t","rule","hash","charCodeAt","doc","ownerDocument","stylesheet","__svelte_stylesheet","head","sheet","current_rules","__svelte_rules","insertRule","cssRules","animation","style","delete_rule","previous","next","filter","anim","indexOf","deleted","deleteRule","clear","set_current_component","get_current_component","Error","onDestroy","createEventDispatcher","setContext","context","set","getContext","get","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","flush","update","pop","has","fragment","before_update","dirty","ctx","after_update","wait","then","dispatch","direction","kind","dispatchEvent","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","null_transition","create_out_transition","params","animation_name","config","running","group","go","easing","tick","css","start_time","end_time","reset","create_bidirectional_transition","intro","running_program","pending_program","clear_animation","init","program","Math","abs","start","end","handle_promise","info","token","index","resolved","child_ctx","current","needs_flush","blocks","m","mount","error","catch","pending","destroy_block","lookup","outro_and_destroy_block","update_keyed_each","old_blocks","get_key","dynamic","list","destroy","create_each_block","get_context","n","old_indexes","new_blocks","new_lookup","Map","deltas","will_move","did_move","first","new_block","old_block","new_key","old_key","create_component","mount_component","on_mount","new_on_destroy","destroy_component","make_dirty","fill","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","ready","ret","rest","hydrate","nodes","from","childNodes","children","l","SvelteComponent","$destroy","splice","message","attributes","links","self","gameList","gameUrl","updateGameUrl","game","entries","apiProtocol","apiHost","userId","cancel","flushError","formData","FormData","getElementById","ok","responseBody","json","updateGameList","JSON","parse","fade","linear","getComputedStyle","opacity","subscriber_queue","writable","stop","subscribers","new_value","run_queue","invalidate","subscriber","savingStatus","lastSaveDate","stores","initial_value","single","stores_array","auto","inited","values","cleanup","sync","result","unsubscribers","derived","selectedTab","updateSelectedTab","toLocaleDateString","archived","created_at","$game","includes","assets","formPrefix","removeAsset","assetIndex","asset","addNewAsset","tuples","namespaces","namespace","tuple","ns","sourcePrettify","source","id","val","resource","displaySavedStatusTimeout","displayEditForm","displaySavedStatus","isExpandedSection","resetFormDisplay","toggleSection","clearTimeout","setTimeout","updatedResource","included","deprecatedIncludedIds","status","comparison","_destroy","criteria","count","period","inverted","relationships","underlying","parseInt","validations","condition","underlyings","u","0","1","2","3","4","5","6","7","eq","gteq","lteq","shortlist","actionType","actions","action","underlyingId","periodEnum","isNaN","trigger count","conditionType","achievements","achievement","to","validDates","newConditionType","conditions","conditionsShowsComponents","action_trigger","ActionTriggerShow","unlocked_achievement","UnlockedAchievementShow","time_frame","TimeFrameShow","conditionsFormsComponents","ActionTriggerForm","UnlockedAchievementForm","TimeFrameForm","evt","relationType","relation","conditionIds","filterConditions","tags","valueTypePrettify","teamIdPrettify","team_required","removeTag","tag","updatedAction","concat","parentElement","rewards","updatedAchievement","model","plural","singular","levels","updates","to_null_out","accounted_for","$$scope","collection","collectionsComponents","Action","Achievement","resources","Resource","g","description","handleSubmit","formId","newGame","confirm","toLocaleString","tabs","overview","Overview","Collection","stats","Stats","dev","Dev","settings","Settings","resJson","getGame","sort","getUserGamesList","authenticated","location","navbarBurger","navBarMenu","contains","remove","URLSearchParams","search","CredentialsButtons","Dashboard"],"mappings":"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"}