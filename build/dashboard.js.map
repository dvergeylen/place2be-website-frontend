{"version":3,"file":"dashboard.js","sources":["../../src/javascripts/utils/helpers.js","../../node_modules/svelte/internal/index.mjs","../../src/components/Dashboard/GameList.svelte","../../src/components/Dashboard/NewGame.svelte","../../node_modules/svelte/store/index.mjs","../../src/javascripts/stores/gameStore.js","../../src/javascripts/stores/savingStore.js","../../src/components/Dashboard/GameTabs.svelte","../../src/components/Dashboard/Tabs/Overview.svelte","../../src/components/Dashboard/Tabs/Action/Action.svelte","../../src/components/Dashboard/Tabs/Actions.svelte","../../src/components/Dashboard/Tabs/Reward/Reward.svelte","../../src/components/Dashboard/Tabs/Rewards.svelte","../../src/components/Dashboard/Tabs/Settings.svelte","../../src/components/Dashboard/GameDetails.svelte","../../src/components/Dashboard/Dashboard.svelte","../../src/components/Credentials/CredentialsButtons.svelte","../../src/javascripts/apps/dashboard.js"],"sourcesContent":["function createUrl(protocol, host, ...path) {\n  const sanitized = (Array.isArray(path)\n    ? path : [path]).map((s) => s.replace(/^\\/+|\\/+$/, ''));\n\n  return `${protocol}//${host}/${sanitized.join('/')}`;\n}\n\nfunction getCookie(cookies, key) {\n  const res = cookies.split(';').map((c) => c.split('=')).find(([k]) => k.trim() === key);\n  return res ? res[1] : undefined;\n}\n\n/* Usage:\n * const res = await fetchData(url);\n * → res.status: 200, 400, ...\n * → res.statusText: 'Ok', 'Bad Request', ...\n * → await res.json(): Json body\n */\nfunction fetchData(url) {\n  // https://developer.mozilla.org/en-US/docs/Web/API/Response\n  const csrf = getCookie(document.cookie, 'csrf_token');\n\n  return fetch(url, {\n    method: 'GET',\n    credentials: 'include', // Includes jwt (unreachable from JS because httponly)\n    headers: {\n      Accept: 'application/json',\n      ...(csrf && { 'x-csrf-token': csrf }), // Includes CSRF Token mitigation\n    },\n  });\n}\n\nfunction postFormData(url, data, method) {\n  const csrf = getCookie(document.cookie, 'csrf_token');\n\n  return fetch(url, {\n    method: method || 'POST',\n    credentials: 'include', // Includes jwt (unreachable because httponly)\n    headers: {\n      Accept: 'application/json',\n      ...(csrf && { 'x-csrf-token': csrf }), // Includes CSRF Token mitigation\n    },\n    body: data,\n  });\n}\n\nfunction postJsonData(token, url, data, method) {\n  const csrf = getCookie(document.cookie, 'csrf_token');\n\n  return fetch(url, {\n    method: method || 'POST',\n    credentials: 'include', // Includes jwt (unreachable because httponly)\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      ...(csrf && { 'x-csrf-token': csrf }), // Includes CSRF Token mitigation\n    },\n    body: JSON.stringify(data),\n  });\n}\n\n/* Navbar toggle */\nfunction setNavbarToggle() {\n  document.addEventListener('DOMContentLoaded', () => {\n    const navbarBurger = document.querySelector('.navbar-burger');\n    const navBarMenu = document.querySelector('.navbar-menu');\n\n    navbarBurger.addEventListener('click', () => {\n      if (navbarBurger.classList.contains('is-active')) {\n        navbarBurger.classList.remove('is-active');\n        navBarMenu.classList.remove('is-active');\n      } else {\n        navbarBurger.classList.add('is-active');\n        navBarMenu.classList.add('is-active');\n      }\n    });\n  });\n}\n\nexport {\n  createUrl,\n  fetchData,\n  postFormData,\n  postJsonData,\n  getCookie,\n  setNavbarToggle,\n};\n","function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value' || descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j];\n                if (attributes[attribute.name]) {\n                    j++;\n                }\n                else {\n                    node.removeAttribute(attribute.name);\n                }\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.setAttribute('aria-hidden', 'true');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next, lookup.has(block.key));\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.20.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\n  import { createEventDispatcher } from 'svelte';\n  export let gameList;\n  export let gameUrl;\n\n  const dispatch = createEventDispatcher();\n\n  function updateGameUrl(url) {\n    dispatch('message', {\n      gameUrl: url,\n    });\n  }\n</script>\n\n<div class=\"content\">\n  {#await gameList}\n    <div class=\"has-vcentered-content\">\n      <svg class=\"fa rotating\">\n        <use href=\"../images/fontawesome-sprite.svg#regular-sync-alt\" />\n      </svg>\n      <p class=\"left-spaced\">Loading Game List</p>\n    </div>\n  {:then games}\n    <article class=\"panel is-primary\">\n      <p class=\"panel-heading\">\n        Your Games :\n      </p>\n      <a href=\"javascript:void(0)\" class=\"panel-block fill-primary\"\n        on:click|preventDefault={async () => updateGameUrl('new')}>\n        <span class=\"panel-icon\">\n          <svg class=\"twemoji\">\n            <use href=\"../images/twemoji-sprite.svg#rocket\" />\n          </svg>\n        </span>\n        <span>\n          New Game\n        </span>\n      </a>\n      {#each games as game}\n        <a href={game.links.self} on:click|preventDefault={() => updateGameUrl(game.links.self)}\n          class=\"panel-block\">\n          <span class=\"panel-icon\" class:fill-primary={gameUrl === game.links.self}>\n            <svg class=\"twemoji\">\n              <use href=\"../images/twemoji-sprite.svg#trophy\" />\n            </svg>\n          </span>\n          {game.attributes.name}\n        </a>\n      {/each}\n    </article>\n  {:catch error}\n    <p class=\"error\">{error.message}</p>\n  {/await}\n</div>\n\n<style lang='scss'>\n  .twemoji {\n    width: 1.2em;\n    height: 1em;\n  }\n</style>","<script>\n  import { getContext, createEventDispatcher } from 'svelte';\n  import { createUrl, postFormData } from '../../javascripts/utils/helpers';\n\n  const dispatch = createEventDispatcher();\n  const apiProtocol = getContext('apiProtocol');\n  const apiHost = getContext('apiHost');\n  const userId = getContext('userId');\n\n  let error = null;\n\n  async function handleSubmit() {\n    const url = createUrl(apiProtocol, apiHost, 'users', userId, 'games');\n    const formData = new FormData(document.getElementById('new-game-form'));\n    const res = await postFormData(url, formData);\n\n    if (!res.ok) {\n      const responseBody = await res.text();\n      error = JSON.parse(responseBody);\n    } else {\n      const responseBody = await res.json();\n\n      /* Update Dashboard's new gameUrl to display */\n      dispatch('message', {\n        gameUrl: responseBody.data.links.self,\n        updateGameList: true,\n      });\n    }\n  }\n\n  function cancel() {\n    /* Update Dashboard's new gameUrl to display */\n    dispatch('message', {\n      gameUrl: undefined,\n    });\n  }\n\n  function flushError() {\n    error = null;\n  }\n</script>\n\n\n<div id=\"new-game\">\n  <h1 class=\"title is-4\">\n    Create new Game :\n  </h1>\n  <p>A Game contains all Actions\n    <svg class=\"twemoji\">\n      <use href=\"../images/twemoji-sprite.svg#high_voltage_sign\" />\n    </svg>,\n    Achievements\n    <svg class=\"twemoji\">\n      <use href=\"../images/twemoji-sprite.svg#trophy\" />\n    </svg>,\n    Rewards\n    <svg class=\"twemoji\">\n      <use href=\"../images/twemoji-sprite.svg#wrapped_present\" />\n    </svg>\n    and Assets\n    <svg class=\"twemoji\">\n      <use href=\"../images/twemoji-sprite.svg#package\" />\n    </svg>\n    your players can interact with.</p>\n\n  <hr>\n\n  <form id=\"new-game-form\" on:submit|preventDefault={handleSubmit}>\n    <div class=\"notification is-danger\" class:is-hidden={!error} >\n      <button class=\"delete\" on:click|preventDefault={() => flushError()} ></button>\n      <h1 class='title is-5'>\n        Unable to Create new Game :\n      </h1>\n      <ul>\n        {#if error}\n          {#each Object.entries(error) as [ key, ar ]}\n            <li>{key} : {ar}</li>\n          {/each}\n        {/if}\n      </ul>\n    </div>\n\n    <div class=\"field\">\n      <label class=\"label\">\n        Game Name\n        <span class=\"mandatory\">*</span>\n      </label>\n      <div class=\"control\">\n        <input name=\"game[name]\" class=\"input reasonable-width\" type=\"text\">\n      </div>\n    </div>\n\n    <div class=\"field\">\n      <label class=\"label\">\n        Description\n        <span class=\"note\">(optional)</span>\n      </label>\n      <div class=\"control\">\n        <input name=\"game[description]\" class=\"input\" type=\"text\">\n      </div>\n      <p class=\"help\">Game and description won't be visible to your players.</p>\n    </div>\n\n    <div class=\"field is-grouped\">\n      <div class=\"control\">\n        <button class=\"button is-link\">Create</button>\n      </div>\n      <div class=\"control\">\n        <button class=\"button is-link is-light\" on:click|preventDefault={() => cancel()}>Cancel</button>\n      </div>\n    </div>\n  </form>\n</div>\n\n\n\n<style lang=\"scss\">\n  #new-game {\n    max-width: 1000px;\n  }\n  .mandatory {\n    color: red;\n  }\n  .note {\n    min-height: 17px;\n    margin: 4px 0 2px;\n    font-size: 12px;\n    color: #586069;\n  }\n</style>","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from 'svelte/store';\n\nexport const game = writable(null);\n","import { writable, derived } from 'svelte/store';\n\nexport const savingStatus = writable('saved');\n\nexport const lastSaveDate = derived(\n  savingStatus,\n  () => new Date(),\n);\n","<script>\n  import { createEventDispatcher } from 'svelte';\n  export let game;\n  export let selectedTab = 'overview';\n\n  const dispatch = createEventDispatcher();\n\n  function updateSelectedTab(selectedTab) {\n    dispatch('message', {\n      selectedTab,\n    });\n  }\n</script>\n\n\n{#if !game}\n  Loading Game tabs...\n{:else}\n  <div id=\"game-tabs-container\" class=\"tabs\">\n    <ul>\n      <li class:is-active={selectedTab === 'overview'}>\n        <a href=\"javascript:void(0)\"\n          on:click|preventDefault={() => updateSelectedTab('overview')}>\n          <svg class=\"twemoji\">\n            <use href=\"../images/twemoji-sprite.svg#compass\" />\n          </svg>\n          <span class=\"left-spaced\">Overview</span>\n        </a>\n      </li>\n      <li class:is-active={selectedTab === 'actions'}>\n        <a href=\"javascript:void(0)\"\n          on:click|preventDefault={() => updateSelectedTab('actions')}>\n          <svg class=\"twemoji\">\n            <use href=\"../images/twemoji-sprite.svg#high_voltage_sign\" />\n          </svg>\n          <span class=\"left-spaced\">Actions</span>\n        </a>\n      </li>\n      <li class:is-active={selectedTab === 'achievements'}>\n        <a href=\"javascript:void(0)\"\n          on:click|preventDefault={() => updateSelectedTab('achievements')}>\n          <svg class=\"twemoji\">\n            <use href=\"../images/twemoji-sprite.svg#trophy\" />\n          </svg>\n          <span class=\"left-spaced\">Achievements</span>\n        </a>\n      </li>\n      <li class:is-active={selectedTab === 'rewards'}>\n        <a href=\"javascript:void(0)\"\n          on:click|preventDefault={() => updateSelectedTab('rewards')}>\n          <svg class=\"twemoji\">\n            <use href=\"../images/twemoji-sprite.svg#wrapped_present\" />\n          </svg>\n          <span class=\"left-spaced\">Rewards</span>\n        </a>\n      </li>\n      <li class:is-active={selectedTab === 'stats'}>\n        <a href=\"javascript:void(0)\"\n          on:click|preventDefault={() => updateSelectedTab('stats')}>\n          <svg class=\"twemoji\">\n            <use href=\"../images/twemoji-sprite.svg#bar_chart\" />\n          </svg>\n          <span class=\"left-spaced\">Stats</span>\n        </a>\n      </li>\n      <li class:is-active={selectedTab === 'dev'}>\n        <a href=\"javascript:void(0)\"\n          on:click|preventDefault={() => updateSelectedTab('dev')}>\n          <svg class=\"twemoji\">\n            <use href=\"../images/twemoji-sprite.svg#woman_technologist\" />\n          </svg>\n          <span class=\"left-spaced\">Integration</span>\n        </a>\n      </li>\n      <li class:is-active={selectedTab === 'settings'}>\n        <a href=\"javascript:void(0)\"\n          on:click|preventDefault={() => updateSelectedTab('settings')}>\n          <svg class=\"twemoji\">\n            <use href=\"../images/twemoji-sprite.svg#gear\" />\n          </svg>\n          <span class=\"left-spaced\">Settings</span>\n        </a>\n      </li>\n    </ul>\n  </div>\n{/if}\n\n<style lang='scss'>\n  #game-tabs-container {\n    margin-top: 1em;\n    margin-bottom: 1em;\n    font-size: 1.1em;\n  }\n\n  .left-spaced {\n    margin-left: 0.5em;\n  }\n</style>","<script>\n  import { game } from '../../../javascripts/stores/gameStore';\n  let created_at;\n\n  $: created_at = new Date($game.attributes.created_at);\n</script>\n\n{#if !$game}\n  <div class=\"has-vcentered-content\">\n    <svg class=\"fa rotating\">\n      <use href=\"../images/fontawesome-sprite.svg#regular-sync-alt\" />\n    </svg>\n    <p class=\"left-spaced\">Loading Game Overview</p>\n  </div>\n{:else}\n  <ul>\n    <li>Created : {created_at.toLocaleDateString()}</li>\n    <li>Active: {$game.attributes.archived ? 'No' : 'Yes'}</li>\n  </ul>\n{/if}","<script>\n  import { getContext, createEventDispatcher } from 'svelte';\n  import { createUrl } from '../../../../javascripts/utils/helpers';\n  import { postFormData } from '../../../../javascripts/utils/helpers';\n  import { game } from '../../../../javascripts/stores/gameStore';\n  import { savingStatus } from '../../../../javascripts/stores/savingStore';\n  export let action = {\n    attributes: {\n      name: '',\n      value_type: 'boolean',\n      tags: '',\n    }\n  };\n\n  const dispatch = createEventDispatcher();\n  const apiProtocol = getContext('apiProtocol');\n  const apiHost = getContext('apiHost');\n  const userId = getContext('userId');\n\n  let error = null;\n  let displayEditForm = false;\n\n  async function saveAction() {\n    savingStatus.set('saving');\n    let path, method;\n\n    if (action.id) {\n      path = ['users', userId, 'games', $game.id, 'actions', action.id];\n      method = 'PUT';\n    } else {\n      path = ['users', userId, 'games', $game.id, 'actions'];\n      method = 'POST';\n    }\n    const url = createUrl(apiProtocol, apiHost, ...path);\n    const formData = new FormData(document.getElementById(`${action.id || 'new'}-action-form`));\n    const res = await postFormData(url, formData, method);\n\n    if (!res.ok) {\n      const t = await res.text();\n      error = JSON.parse(t);\n      savingStatus.set('failed');\n    } else {\n      /* Update action (update) or Update actions list (new) */\n      savingStatus.set('saved');\n      if (action.id) {\n        const updatedAction = await res.json();\n        action = updatedAction.data;\n        resetFormDisplay();\n      } else {\n        const actions = await res.json();\n        dispatch('message', {\n          actions: actions.data,\n        });\n      }\n    }\n  }\n\n  async function destroyAction() {\n    savingStatus.set('saving');\n    const path = ['users', userId, 'games', $game.id, 'actions', action.id];\n    const url = createUrl(apiProtocol, apiHost, ...path);\n    const res = await postFormData(url, {}, 'DELETE');\n\n    if (!res.ok) {\n      const t = await res.text();\n      error = JSON.parse(t);\n      savingStatus.set('failed');\n    } else {\n      savingStatus.set('saved');\n\n      /* Update actions list */\n      const actions = await res.json();\n      dispatch('message', {\n        actions: actions.data,\n      });\n    }\n  }\n\n  function valueTypePrettify(val) {\n    let result = 'Unknown';\n\n    switch(val) {\n      case 'boolean':\n        result = 'Boolean (Yes | No)';\n        break;\n      case 'int':\n        result = 'Integer';\n        break;\n      case 'float':\n        result = 'Float';\n        break;\n      case 'string':\n        result = 'String';\n        break;\n      case 'date':\n        result = 'Date';\n    }\n    return result;\n  }\n\n  function teamIdPrettify(val) {\n    let result = 'Unknown';\n\n    switch(val) {\n      case false:\n        result = 'No, optional';\n        break;\n      case true:\n        result = 'Yes, required';\n    }\n    return result;\n  }\n\n  function toggleFormDisplay() {\n    displayEditForm = !displayEditForm;\n  }\n\n  function resetFormDisplay() {\n    displayEditForm = false;\n  }\n\n  function flushError() {\n    error = null;\n  }\n</script>\n\n<div class='item-box'>\n\n  <!-- Show Action -->\n  <div class:is-hidden={displayEditForm || !action.id}>\n    <div class=\"columns is-mobile\">\n      <div class=\"column\">\n        <h1 id=\"action-name\" class=\"title is-5 has-vcentered-text\">\n          <span class:is-hidden={displayEditForm}>\n            {action.attributes.name}\n          </span>\n          <svg class=\"fa name-edit fill-primary no-hover\" class:is-hidden={displayEditForm}\n            on:click={toggleFormDisplay}>\n            <use href=\"../images/fontawesome-sprite.svg#regular-edit\" />\n          </svg>\n        </h1>\n      </div>\n    </div>\n\n    <table class=\"table\">\n      <tbody>\n        <tr>\n          <td class=\"right\">\n            Value Type :\n          </td>\n          <td class=\"is-value\">\n            {valueTypePrettify(action.attributes.value_type)}\n          </td>\n        </tr>\n        <tr>\n          <td class=\"right\">\n            Team Id field :\n          </td>\n          <td class=\"is-value\">\n            {teamIdPrettify(action.attributes.team_required)}\n          </td>\n        </tr>\n        <tr>\n          <td class=\"right\">\n            Tags :\n          </td>\n          <td class=\"is-value\">\n            <div class=\"tags\">\n              {#each action.attributes.tags.split(',') as tag}\n                <span class=\"tag is-link\">{tag}</span>\n              {/each}\n            </div>\n          </td>\n        </tr>\n        <tr>\n          <td>\n          </td>\n          <td>\n            <p class=\"help\">\n              Need help? See \n              <a href=\"https://doc/place2be.io/actions\" target=\"_blank\">\n                <span>Doc</span>\n                <svg class=\"fa fill-primary no-hover\">\n                  <use href=\"../images/fontawesome-sprite.svg#regular-external-link-square\" />\n                </svg>\n              </a>\n            </p>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n\n  <!-- Edit Action -->\n  <div class:is-hidden={!displayEditForm && action.id}>\n    <form id=\"{action.id || 'new'}-action-form\"\n      on:submit|preventDefault={saveAction}>\n\n        <div class=\"columns is-mobile\">\n          <div class=\"column\">\n            <h1 id=\"reward-name\" class=\"title is-5 has-vcentered-text\">\n              <input class=\"input reasonable-width\" type=\"text\" name=\"act[name]\"\n                bind:value={action.attributes.name} placeholder=\"Action name\">\n            </h1>\n          </div>\n          {#if action.id}\n            <div class=\"column is-narrow\">\n                <svg class=\"fa destroy\" on:click={destroyAction}>\n                  <use href=\"../images/fontawesome-sprite.svg#regular-times-circle\" />\n                </svg>\n            </div>\n          {/if}\n        </div>\n\n        <div class=\"notification is-danger\" class:is-hidden={!error} >\n          <button class=\"delete\" on:click|preventDefault={() => flushError()} ></button>\n          <h1 class='title is-5'>\n            Unable to Update Action :\n          </h1>\n          <ul>\n            {#if error}\n              {#each Object.entries(error) as [ key, ar ]}\n                <li>{key} : {ar}</li>\n              {/each}\n            {/if}\n          </ul>\n        </div>\n\n        <table class=\"table\">\n          <tbody>\n            <tr>\n              <td class=\"right\">\n                Value Type :\n              </td>\n              <td>\n                <div class=\"select\">\n                  <select name=\"act[value_type]\" bind:value={action.attributes.value_type}>\n                    <option value='boolean'>Boolean (Yes | No)</option>\n                    <option value='int'>Integer</option>\n                    <option value='float'>Float</option>\n                    <option value='string'>String</option>\n                    <option value='date'>Date</option>\n                  </select>\n                </div>\n              </td>\n            </tr>\n            <tr>\n              <td class=\"right\">\n                Team Id field :\n              </td>\n              <td>\n                <div class=\"select\">\n                  <select name=\"act[team_required]\" bind:value={action.attributes.team_required}>\n                    <option value=\"false\">No, optional</option>\n                    <option value=\"true\">Yes, required</option>\n                  </select>\n                </div>\n              </td>\n            </tr>\n            <tr>\n              <td class=\"right\">\n                Tags :\n              </td>\n              <td>\n                <input class=\"input\" type=\"text\" name=\"act[tags]\"\n                bind:value={action.attributes.tags} placeholder=\"comma separated, max. 5\">\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <p class=\"help\">\n                  Need help? See \n                  <a href=\"https://doc/place2be.io/actions\" target=\"_blank\">\n                    <span>Doc</span>\n                    <svg class=\"fa fill-primary no-hover\">\n                      <use href=\"../images/fontawesome-sprite.svg#regular-external-link-square\" />\n                    </svg>\n                  </a>\n                </p>\n              </td>\n              <td>\n                  <button class=\"button is-primary\">\n                  {#if !action.id}\n                    Create\n                  {:else}\n                    Update\n                  {/if}\n                  </button>\n                  {#if action.id}\n                    <button class=\"button is-primary is-light\"\n                     on:click|preventDefault={resetFormDisplay}>\n                      Cancel\n                    </button>\n                  {/if}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n    </form>\n  </div>\n</div>\n\n\n<style lang='scss'>\n  #action-name {\n    margin-top: 0.5em;\n    margin-left: 0.5em;\n  }\n  td {\n    vertical-align: middle;\n  }\n  td.right {\n    text-align: right;\n  }\n  td.is-value {\n    color: gray;\n    font-style: italic;\n  }\n  .name-edit {\n    height: 0.7em;\n    margin-left: 0.2em;\n  }\n  .fa {\n    cursor: pointer;\n  }\n  svg.destroy {\n    fill: brown;\n  }\n</style>","<script>\n  import Action from './Action/Action.svelte';\n  import { fetchData } from '../../../javascripts/utils/helpers';\n  import { game } from '../../../javascripts/stores/gameStore';\n\n  let actions = [];\n\n  async function fetchActions(game) {\n    const url = game.relationships.actions.links.related;\n    const res = await fetchData(url);\n\n    if (res.ok) {\n      const resJson = await res.json();\n      actions = resJson.data;\n    } else {\n      error = 'Could not fetch Actions for this game';\n    }\n  };\n\n  function updateActions(event) {\n    actions = event.detail.actions;\n  }\n\n  $: if ($game) fetchActions($game);\n</script>\n\n{#if !$game}\n  <div class=\"has-vcentered-content\">\n    <svg class=\"fa rotating\">\n      <use href=\"../images/fontawesome-sprite.svg#regular-sync-alt\" />\n    </svg>\n    <p class=\"left-spaced\">Loading Game Actions</p>\n  </div>\n{:else}\n  {#if actions.length}\n    {#each actions as action (action.id)}\n      <Action {action} on:message={updateActions}/>\n    {/each}\n  {:else}\n    <p>You don't have Actions  yet! Start by creating one below ↓</p>\n  {/if}\n\n\n\n  <hr>\n  <h1 class=\"title is-4\">\n    Create new Action :\n  </h1>\n  <Action on:message={updateActions}/>\n{/if}\n","<script>\n  import { getContext, createEventDispatcher } from 'svelte';\n  import { createUrl } from '../../../../javascripts/utils/helpers';\n  import { postFormData } from '../../../../javascripts/utils/helpers';\n  import { game } from '../../../../javascripts/stores/gameStore';\n  import { savingStatus } from '../../../../javascripts/stores/savingStore';\n  export let reward = {\n    attributes: {\n      name: '',\n      source: 'virtual',\n      assets: [{\n        key: '',\n        value: '',\n      }],\n    }\n  };\n\n  const dispatch = createEventDispatcher();\n  const apiProtocol = getContext('apiProtocol');\n  const apiHost = getContext('apiHost');\n  const userId = getContext('userId');\n\n  let error = null;\n  let tags;\n  let displayNameInput = false;\n\n  async function saveReward() {\n    savingStatus.set('saving');\n    let path, method;\n\n    if (reward.id) {\n      path = ['users', userId, 'games', $game.id, 'rewards', reward.id];\n      method = 'PUT';\n    } else {\n      path = ['users', userId, 'games', $game.id, 'rewards'];\n      method = 'POST';\n    }\n    const url = createUrl(apiProtocol, apiHost, ...path);\n    const formData = new FormData(document.getElementById(`${reward.id || 'new'}-reward-form`));\n    const res = await postFormData(url, formData, method);\n\n    if (!res.ok) {\n      const t = await res.text();\n      error = JSON.parse(t);\n      savingStatus.set('failed');\n    } else {\n      /* Update reward (update) or Update rewards list (new) */\n      savingStatus.set('saved');\n      if (reward.id) {\n        const updatedReward = await res.json();\n        reward = updatedReward.data;\n      } else {\n        const rewards = await res.json();\n        dispatch('message', {\n          rewards: rewards.data,\n        });\n      }\n    }\n  }\n\n  async function destroyReward() {\n    savingStatus.set('saving');\n    const path = ['users', userId, 'games', $game.id, 'rewards', reward.id];\n    const url = createUrl(apiProtocol, apiHost, ...path);\n    const res = await postFormData(url, {}, 'DELETE');\n\n    if (!res.ok) {\n      const t = await res.text();\n      error = JSON.parse(t);\n      savingStatus.set('failed');\n    } else {\n      savingStatus.set('saved');\n\n      /* Update rewards list */\n      const rewards = await res.json();\n      dispatch('message', {\n        rewards: rewards.data,\n      });\n    }\n  }\n\n  function updateReward() {\n    if (reward.id) saveReward();\n  }\n\n  function toggleEditName() {\n    displayNameInput = !displayNameInput;\n  }\n\n  function flushError() {\n    error = null;\n  }\n\n  $: console.log(reward);\n  $: console.log($savingStatus);\n</script>\n\n<form id=\"{reward.id || 'new'}-reward-form\" on:change={updateReward}\n  on:submit|preventDefault={saveReward}>\n  <div class='item-box'>\n    {#if reward.id}\n      <div class=\"columns is-mobile\">\n        <div class=\"column\">\n          <h1 id=\"reward-name\" class=\"title is-5 has-vcentered-text\">\n            <span class:is-hidden={displayNameInput}>\n              {reward.attributes.name}\n            </span>\n            <input class=\"input reasonable-width\" type=\"text\" name=\"reward[name]\"\n              bind:value={reward.attributes.name}\n            class:is-hidden={!displayNameInput}>\n\n            <svg class=\"fa name-edit fill-primary no-hover\" class:is-hidden={displayNameInput}\n              on:click={toggleEditName}>\n              <use href=\"../images/fontawesome-sprite.svg#regular-edit\" />\n            </svg>\n            <svg class=\"fa name-edit fill-primary no-hover\" class:is-hidden={!displayNameInput}\n              on:click={toggleEditName}>\n              <use href=\"../images/fontawesome-sprite.svg#regular-check-circle\" />\n            </svg>\n          </h1>\n        </div>\n          <div class=\"column is-narrow\">\n              <svg class=\"fa fill-anthracite\" on:click={destroyReward}>\n                <use href=\"../images/fontawesome-sprite.svg#regular-times-circle\" />\n              </svg>\n          </div>\n      </div>\n    {/if}\n\n    <div class=\"notification is-danger\" class:is-hidden={!error} >\n      <button class=\"delete\" on:click|preventDefault={() => flushError()} ></button>\n      <h1 class='title is-5'>\n        Unable to Update Reward :\n      </h1>\n      <ul>\n        {#if error}\n          {#each Object.entries(error) as [ key, ar ]}\n            <li>{key} : {ar}</li>\n          {/each}\n        {/if}\n      </ul>\n    </div>\n\n    <table class=\"table\">\n      <tbody>\n        {#if !reward.id}\n          <tr>\n            <td class=\"right\">\n              Name :\n            </td>\n            <td>\n              <input class=\"input\" type=\"text\" name=\"reward[name]\">\n            </td>\n          </tr>\n        {/if}\n        <tr>\n          <td class=\"right\">\n            Source :\n          </td>\n          <td>\n            <div class=\"select\">\n              <select name=\"reward[source]\" bind:value={reward.attributes.source}>\n                <option value='virtual'>Virtual money</option>\n                <option value='list' disabled='disabled'>CSV List</option>\n                <option value='uri' disabled='disabled'>External URI</option>\n                <option value='scheme' disabled='disabled'>Scheme</option>\n              </select>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <h1 class=\"title is-6\">Assets :</h1>\n    <table class=\"table\">\n      <tbody>\n        {#each reward.attributes.assets as asset}\n          <tr>\n            <td class=\"right\">\n              <input class=\"input asset-key\" type=\"text\" name=\"reward[assets][][key]\"\n              placeholder=\"key\" bind:value={asset.key}>\n            </td>\n            <td class=\"has-vcentered-text\">\n              <input class=\"input\" type=\"text\" name=\"reward[assets][][value]\"\n              placeholder=\"value\" bind:value={asset.value}>\n            </td>\n            <td>\n              <svg class=\"fa fill-primary no-hover left-spaced\">\n                <use href=\"../images/fontawesome-sprite.svg#regular-times\" />\n              </svg>\n            </td>\n          </tr>\n        {/each}\n        <tr>\n          <td class=\"right\">\n          </td>\n          <td>\n            <p class=\"help\">+ new key-value asset entry</p>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <p class=\"help\">\n              Need help? See \n              <a href=\"https://doc/place2be.io/rewards\" target=\"_blank\">\n                <span>Doc</span>\n                <svg class=\"fa fill-primary no-hover\">\n                  <use href=\"../images/fontawesome-sprite.svg#regular-external-link-square\" />\n                </svg>\n              </a>\n            </p>\n          </td>\n          <td>\n            {#if !reward.id}\n              <button class=\"button is-primary\">\n                Create\n              </button>\n            {/if}\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</form>\n\n\n<style lang='scss'>\n  #reward-name {\n    margin-top: 0.5em;\n    margin-left: 0.5em;\n  }\n  td {\n    vertical-align: middle;\n  }\n  td.right, input.asset-key {\n    text-align: right;\n  }\n  .name-edit {\n    height: 0.7em;\n    margin-left: 0.2em;\n  }\n  .fa {\n    cursor: pointer;\n  }\n\n</style>","<script>\n  import Reward from './Reward/Reward.svelte';\n  import { fetchData } from '../../../javascripts/utils/helpers';\n  import { game } from '../../../javascripts/stores/gameStore';\n\n  let rewards = [];\n\n  async function fetchRewards(game) {\n    const url = game.relationships.rewards.links.related;\n    const res = await fetchData(url);\n\n    if (res.ok) {\n      const resJson = await res.json();\n      rewards = resJson.data;\n    } else {\n      error = 'Could not fetch Rewards for this game';\n    }\n  };\n\n  function updateRewards(event) {\n    rewards = event.detail.rewards;\n  }\n\n  $: if ($game) fetchRewards($game);\n</script>\n\n{#if !$game}\n  <div class=\"has-vcentered-content\">\n    <svg class=\"fa rotating\">\n      <use href=\"../images/fontawesome-sprite.svg#regular-sync-alt\" />\n    </svg>\n    <p class=\"left-spaced\">Loading Game Rewards</p>\n  </div>\n{:else}\n  {#if rewards.length}\n    {#each rewards as reward (reward.id)}\n      <Reward {reward} on:message={updateRewards}/>\n    {/each}\n  {:else}\n    <p>You don't have Rewards yet! Start by creating one below ↓</p>\n  {/if}\n\n\n\n  <hr>\n  <h1 class=\"title is-4\">\n    Create new Reward :\n  </h1>\n  <Reward on:message={updateRewards}/>\n{/if}\n","<script>\n  import { getContext, createEventDispatcher } from 'svelte';\n  import { createUrl } from '../../../javascripts/utils/helpers';\n  import { postFormData } from '../../../javascripts/utils/helpers';\n  import { game } from '../../../javascripts/stores/gameStore';\n  import { savingStatus } from '../../../javascripts/stores/savingStore';\n  let error = null;\n\n  const dispatch = createEventDispatcher();\n  const apiProtocol = getContext('apiProtocol');\n  const apiHost = getContext('apiHost');\n  const userId = getContext('userId');\n\n  async function handleSubmit(path, formId) {\n    const url = createUrl(apiProtocol, apiHost, ...path);\n    const formData = new FormData(document.getElementById(formId));\n\n    savingStatus.set('saving');\n    const res = await postFormData(url, formData, 'PUT');\n\n    if (!res.ok) {\n      const t = await res.text();\n      error = JSON.parse(t);\n      savingStatus.set('failed');\n    } else {\n      savingStatus.set('saved');\n\n      /* Update Game Store with new content */\n      const newGame = await res.json();\n      game.set(newGame.data);\n\n      /* Update Dashboard's game List */\n      dispatch('message', {\n        gameUrl: newGame.data.links.self,\n        updateGameList: true,\n      });\n    }\n  }\n\n  function handleUpdate() {\n    handleSubmit(['users', userId, 'games', $game.id], 'settings-form');\n  }\n\n  function handleDanger() {\n    handleSubmit(['users', userId, 'games', $game.id], 'danger-form');\n  }\n\n  async function handleDestroy() {\n    const path = ['users', userId, 'games', $game.id];\n    const url = createUrl(apiProtocol, apiHost, ...path);\n    const res = await postFormData(url, {}, 'DELETE');\n\n    if (!res.ok) {\n      const t = await res.text();\n      error = JSON.parse(t);\n    } else {\n      /* Reset Game Store content */\n      game.set(null);\n\n      /* Update Dashboard's game List */\n      dispatch('message', {\n        gameUrl: undefined,\n        updateGameList: true,\n      });\n    }\n  }\n\n  function flushError() {\n    error = null;\n  }\n</script>\n\n{#if !$game}\n  <div class=\"has-vcentered-content\">\n      <svg class=\"fa rotating\">\n        <use href=\"../images/fontawesome-sprite.svg#regular-sync-alt\" />\n      </svg>\n      <p class=\"left-spaced\">Loading Game Settings</p>\n    </div>\n{:else}\n  <form id=\"settings-form\" on:submit|preventDefault={handleUpdate}>\n    <div class=\"notification is-danger\" class:is-hidden={!error} >\n      <button class=\"delete\" on:click|preventDefault={() => flushError()} ></button>\n      <h1 class='title is-5'>\n        Unable to Update Game :\n      </h1>\n      <ul>\n        {#if error}\n          {#each Object.entries(error) as [ key, ar ]}\n            <li>{key} : {ar}</li>\n          {/each}\n        {/if}\n      </ul>\n    </div>\n\n    <div class=\"field\">\n      <label class=\"label\">\n        Game Name\n      </label>\n      <div class=\"control\">\n        <input name=\"game[name]\" class=\"input reasonable-width\" type=\"text\"\n          value={$game['attributes']['name']}>\n      </div>\n    </div>\n\n    <div class=\"field\">\n      <label class=\"label\">\n        Description\n      </label>\n      <div class=\"control\">\n        <input name=\"game[description]\" class=\"input\" type=\"text\"\n          value={$game['attributes']['description']}>\n      </div>\n      <p class=\"help\">Game and description won't be visible to your players.</p>\n    </div>\n\n    <button class=\"button is-link\">Update Settings</button>\n  </form>\n\n  <hr>\n\n  <h1 class=\"title is-4\">Danger Zone :</h1>\n  <form id=\"danger-form\" on:submit|preventDefault={handleDanger}>\n    <div class=\"field\">\n      <input name=\"game[archived]\" class=\"input\" type=\"hidden\"\n          value={!$game['attributes']['archived']}>\n      <button class=\"button is-danger is-outlined\"\n        class:is-hidden={$game.attributes.archived}>Archive this Game</button>\n      <button class=\"button is-danger is-outlined\"\n        class:is-hidden={!$game.attributes.archived}>Reactivate this Game</button>\n      <p class=\"help\">Once you archive a game, no player will be able to access it anymore. Please be certain!</p>\n    </div>\n  </form>\n\n  <div class=\"field\">\n    <button class=\"button is-danger is-outlined\" on:click|preventDefault={handleDestroy}>\n      Delete this Game\n    </button>\n    <p class=\"help\">Once you delete a game, there is no going back. Please be certain!</p>\n  </div>\n{/if}\n\n<style lang=scss>\n  button.is-danger {\n    color: #cb2431 !important;\n    background: white !important;\n    border: 1px solid #cb2431 !important;\n  }\n</style>","<script>\n  import { fetchData } from '../../javascripts/utils/helpers';\n  import { game } from '../../javascripts/stores/gameStore';\n  import { savingStatus, lastSaveDate } from '../../javascripts/stores/savingStore';\n  import GameTabs from './GameTabs.svelte';\n  import Overview from './Tabs/Overview.svelte';\n  import Actions from './Tabs/Actions.svelte';\n  import Achievements from './Tabs/Achievements.svelte';\n  import Rewards from './Tabs/Rewards.svelte';\n  import Stats from './Tabs/Stats.svelte';\n  import Dev from './Tabs/Dev.svelte';\n  import Settings from './Tabs/Settings.svelte';\n\n  export let gameUrl;\n  let error = null;\n  let selectedTab = 'actions';\n  const tabs = {\n    overview: Overview,\n    actions: Actions,\n    achievements: Achievements,\n    rewards: Rewards,\n    stats: Stats,\n    dev: Dev,\n    settings: Settings,\n  }\n\n  async function getGame(url) {\n    const res = await fetchData(url);\n    if (res.ok) {\n      const resJson = await res.json();\n      game.set(resJson.data);\n    } else {\n      error = 'Could not find the game you are looking for...';\n    }\n  }\n\n  function handleNewSelectedTab(event) {\n    selectedTab = event.detail.selectedTab;\n  }\n\n  // Update game Store when gameUrl is updated\n  $: getGame(gameUrl);\n</script>\n\n{#if !error}\n  {#if !$game}\n    <h1 class=\"title is-4 has-vcentered-content\">\n      Loading Game...\n    </h1>\n  {:else}\n    <h1 class=\"title is-4 has-vcentered-content\">\n      <span id=\"saving-status\">\n        <abbr title=\"Last save : {$lastSaveDate.toLocaleString()}\">\n          <svg class=\"fa saved\" class:is-hidden={$savingStatus != 'saved'}>\n            <use href=\"../images/fontawesome-sprite.svg#solid-check-circle\" />\n          </svg>\n          <svg class=\"fa saving rotating\" class:is-hidden={$savingStatus != 'saving'}>\n            <use href=\"../images/fontawesome-sprite.svg#solid-spinner-third\" />\n          </svg>\n          <svg class=\"fa failed\" class:is-hidden={$savingStatus != 'failed'}>\n            <use href=\"../images/fontawesome-sprite.svg#solid-times-circle\" />\n          </svg>\n        </abbr>\n      </span>\n      {$game['attributes']['name']}\n    </h1>\n    <h1 id=\"game-description\" class=\"subtitle is-6\">{$game['attributes']['description']}</h1>\n  {/if}\n\n  <GameTabs game={$game} {selectedTab} on:message={handleNewSelectedTab} />\n  <svelte:component this={tabs[selectedTab]} on:message/>\n{:else}\n  <div class=\"notification is-warning\" class:is-hidden={!error}>\n    <p>Could not load the game you are looking for...</p>\n  </div>\n{/if}\n\n<style lang=\"scss\">\n  #saving-status {\n    border-bottom-style: none;\n    padding: 0.5em 0;\n    margin-right: 0.5em;\n\n    svg {\n      vertical-align: middle;\n    }\n\n    .saved {\n      fill: #73c90a;\n    }\n    .saving{\n      fill: rgb(177, 177, 177);\n    }\n    .failed{\n      fill: darkred;\n    }\n  }\n\n  #game-description {\n    margin-left: 2.3em;\n  }\n</style>","<script>\n  import { setContext } from 'svelte';\n  import { createUrl, fetchData } from '../../javascripts/utils/helpers';\n  import GameList from './GameList.svelte';\n  import NewGame from './NewGame.svelte';\n  import GameDetails from './GameDetails.svelte';\n  export let apiProtocol;\n  export let apiHost;\n  export let userId = undefined;\n  let gameList;\n  let gameUrl;\n\n  async function getUserGamesList(id) {\n    const url = createUrl(apiProtocol, apiHost, 'users', id, 'games');\n    const res = await fetchData(url);\n    const resJson = await res.json();\n    return resJson.data;\n  };\n\n  async function handleNewGameUrl(event) {\n    if (event.detail.updateGameList) {\n      gameList = await getUserGamesList(userId);\n    }\n    gameUrl = event.detail.gameUrl;\n  }\n\n  $: gameList = getUserGamesList(userId);\n  $: setContext('apiProtocol', apiProtocol);\n  $: setContext('apiHost', apiHost);\n  $: setContext('userId', userId);\n</script>\n\n\n <div class=\"columns\">\n  <div class=\"column is-2\">\n    <GameList {gameList} {gameUrl} on:message={handleNewGameUrl} />\n  </div>\n  <div class=\"column\">\n    <div id=\"game-content\" class=\"box\">\n      {#if !gameUrl}\n        <p><span class=\"is-hidden-touch\">←</span><span class=\"is-hidden-desktop\">↑</span> Start by hitting the 'New Game' button !\n          <svg class=\"twemoji\">\n            <use href=\"../images/twemoji-sprite.svg#party_popper\" />\n          </svg>\n        </p>\n      {:else if gameUrl === 'new'}\n        <NewGame on:message={handleNewGameUrl} />\n      {:else}\n        <GameDetails {gameUrl} on:message={handleNewGameUrl} />\n      {/if}\n    </div>\n  </div>\n</div>\n\n<style lang='scss'>\n  div#game-content {\n    max-width:1152px;\n  }\n</style>","<script>\n  import { onMount } from 'svelte';\n  import { createUrl, getCookie } from '../../javascripts/utils/helpers';\n  import { postFormData } from '../../javascripts/utils/helpers';\n  export let apiProtocol;\n  export let apiHost;\n\n  let authenticated = false;\n\n  onMount(async () => {\n    authenticated = getCookie(document.cookie, 'user_id');\n  });\n\n  async function signout() {\n    const url = createUrl(apiProtocol, apiHost, 'signout');\n    const res = await postFormData(url, undefined);\n\n    /* Redirect to landing page */\n    window.location.replace(createUrl(window.location.protocol,\n      window.location.host, 'index.html'));\n  }\n</script>\n\n<div class=\"buttons\">\n  <a href=\"/credentials.html\" class=\"button is-link is-outlined fill-primary\" class:is-hidden=\"{authenticated}\">\n    <span class=\"icon is-small\">\n      <svg class=\"fa\">\n        <use href=\"../images/fontawesome-sprite.svg#solid-sign-in\" />\n      </svg>\n    </span>\n    <span>\n      Sign In\n    </span>\n  </a>\n  <a href='/settings.html' class=\"button is-link is-outlined fill-primary\"  class:is-hidden=\"{!authenticated}\">\n    <span class=\"icon is-small\">\n      <svg class=\"fa\">\n        <use href=\"../images/fontawesome-sprite.svg#solid-cog\" />\n      </svg>\n    </span>\n    <span>\n      Settings\n    </span>\n  </a>\n  <button id=\"sign-out\" class=\"button is-link fill-secondary\" class:is-hidden=\"{!authenticated}\" on:click={signout}>\n    <span class=\"icon is-small\">\n      <svg class=\"fa\">\n        <use href=\"../images/fontawesome-sprite.svg#solid-sign-out\" />\n      </svg>\n    </span>\n    <span>\n      Sign Out\n    </span>\n  </button>\n  <a href=\"/credentials.html?signup=true\" class=\"button is-link fill-primary\" class:is-hidden=\"{authenticated}\">\n    <span class=\"icon is-small\">\n      <svg class=\"fa fill-secondary\">\n        <use href=\"../images/fontawesome-sprite.svg#solid-sign-in-alt\" />\n      </svg>\n    </span>\n    <span>\n      Sign Up\n    </span>\n  </a>\n</div>\n\n<style lang='scss'>\n</style>","/*\n * Users APP\n */\n\n/* config */\nimport config from '../../../public-config.json';\n\n/* Javascripts */\nimport { getCookie, setNavbarToggle } from '../utils/helpers';\n\n/* Stylesheets */\nimport '../../stylesheets/navbar.scss';\nimport '../../stylesheets/dashboard.scss';\n\n/* Components */\nimport Dashboard from '../../components/Dashboard/Dashboard.svelte';\nimport CredentialsButtons from '../../components/Credentials/CredentialsButtons.svelte';\n\n/* Navbar toggle */\nsetNavbarToggle();\n\nconst app = (async () => {\n  // Figure out: are we asking our own dashboard\n  // or a distinct user's one?\n  const params = new URLSearchParams(window.location.search);\n  const userId = params.has('user_id')\n    ? params.get('user_id')\n    : getCookie(document.cookie, 'user_id');\n\n  // eslint-disable-next-line no-unused-vars\n  const auth = new CredentialsButtons({\n    target: document.getElementById('credentials-buttons'),\n    props: {\n      apiProtocol: config.api.protocol,\n      apiHost: config.api.host,\n    },\n  });\n\n  // eslint-disable-next-line no-unused-vars\n  const dashboard = new Dashboard({\n    target: document.getElementById('main'),\n    props: {\n      apiProtocol: config.api.protocol,\n      apiHost: config.api.host,\n      userId,\n    },\n  });\n})();\n\n\nexport default app;\n"],"names":["createUrl","protocol","host","path","Array","isArray","map","s","replace","join","getCookie","cookies","key","res","split","c","find","k","trim","undefined","fetchData","url","csrf","document","cookie","fetch","method","credentials","headers","Accept","x-csrf-token","postFormData","data","body","noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","createElement","svg_element","createElementNS","text","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","set_input_value","input","select_option","select","option","__value","selected","select_value","selected_option","querySelector","toggle_class","toggle","classList","current_component","set_current_component","get_current_component","Error","createEventDispatcher","type","detail","e","createEvent","initCustomEvent","custom_event","slice","setContext","context","set","getContext","get","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","check_outros","transition_in","block","local","delete","transition_out","o","handle_promise","promise","info","token","index","resolved","child_ctx","current","needs_flush","blocks","m","mount","then","error","catch","pending","outro_and_destroy_block","lookup","update_keyed_each","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","n","old_indexes","new_blocks","new_lookup","Map","deltas","Math","abs","will_move","did_move","first","new_block","old_block","new_key","old_key","create_component","mount_component","on_mount","new_on_destroy","filter","destroy_component","make_dirty","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","ready","ret","rest","hydrate","nodes","from","childNodes","children","l","intro","SvelteComponent","[object Object]","$destroy","indexOf","splice","message","attributes","links","self","gameList","gameUrl","dispatch","updateGameUrl","game","entries","apiProtocol","apiHost","userId","cancel","flushError","formData","FormData","getElementById","ok","responseBody","json","updateGameList","JSON","parse","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","invalidate","subscriber","savingStatus","lastSaveDate","stores","initial_value","single","stores_array","auto","inited","values","cleanup","sync","result","unsubscribers","derived","Date","selectedTab","updateSelectedTab","toLocaleDateString","archived","created_at","$game","valueTypePrettify","value_type","teamIdPrettify","team_required","tags","id","val","action","displayEditForm","resetFormDisplay","updatedAction","actions","t","relationships","related","resJson","fetchActions","assets","source","reward","displayNameInput","saveReward","updatedReward","rewards","console","log","$savingStatus","asset","fetchRewards","handleSubmit","formId","newGame","toLocaleString","tabs","overview","Overview","Actions","achievements","Achievements","Rewards","stats","Stats","dev","Dev","settings","Settings","getGame","getUserGamesList","authenticated","window","location","navbarBurger","navBarMenu","contains","remove","params","URLSearchParams","search","CredentialsButtons","config","Dashboard"],"mappings":"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"}